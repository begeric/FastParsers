class fresh$macro$1165 extends AnyRef with fastparsers.framework.ruleprocessing.FinalFastParserImpl {
  def <init>(): fresh$macro$1165 = {
    fresh$macro$1165.super.<init>();
    ()
  };
  import scala.collection.mutable.ListBuffer;
  import scala.reflect.runtime.`package`.universe._;
  def member: fastparsers.parsers.Parser[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = scala.this.Predef.???;
  def arr: fastparsers.parsers.Parser[JSValue] = scala.this.Predef.???;
  def value: fastparsers.parsers.Parser[JSValue] = scala.this.Predef.???;
  def obj: fastparsers.parsers.Parser[JSValue] = scala.this.Predef.???;
  def member(input: Array[Char], fresh$macro$805: Int = 0): fastparsers.framework.parseresult.ParseResult[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue),String] = {
    var error: String = " ";
    {
      var inputpos: Int = fresh$macro$805;
      val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
      {
        val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
        {
          var success: Boolean = false;
          var fresh$macro$808: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$815: JSValue = null;
          var fresh$macro$817: JSValue = null;
          var fresh$macro$819: JSValue = null;
          var fresh$macro$821: JSValue = null;
          var fresh$macro$823: JSValue = null;
          var fresh$macro$825: JSValue = null;
          var fresh$macro$830: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = immutable.this.Nil;
          var fresh$macro$836: Array[Char] = null;
          var fresh$macro$839: (fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue) = null;
          var fresh$macro$844: JSObject = null;
          var fresh$macro$845: JSValue = null;
          var fresh$macro$849: List[JSValue] = immutable.this.Nil;
          var fresh$macro$855: Array[Char] = null;
          var fresh$macro$858: JSValue = null;
          var fresh$macro$863: JSArray = null;
          var fresh$macro$864: JSValue = null;
          var fresh$macro$868: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$869: JSString = null;
          var fresh$macro$873: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$875: JSDouble = null;
          var fresh$macro$880: Array[Char] = null;
          var fresh$macro$881: JSNull.type = null;
          var fresh$macro$886: Array[Char] = null;
          var fresh$macro$887: JSBool = null;
          var fresh$macro$892: Array[Char] = null;
          var fresh$macro$893: JSBool = null;
          var fresh$macro$894: JSValue = null;
          {
            {
              val fresh$macro$807: Int = inputpos;
              {
                while$2(){
                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                    {
                      inputpos = inputpos.+(1);
                      while$2()
                    }
                  else
                    ()
                };
                val fresh$macro$806: Int = inputpos;
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                  {
                    inputpos = inputpos.+(1);
                    while$1(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                        {
                          {
                            if (input.apply(inputpos).==('\\'))
                              inputpos = inputpos.+(1)
                            else
                              ();
                            inputpos = inputpos.+(1)
                          };
                          while$1()
                        }
                      else
                        ()
                    };
                    if (inputpos.<(inputsize))
                      {
                        success = true;
                        inputpos = inputpos.+(1);
                        fresh$macro$808 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$806, inputpos)
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$807
                      }
                  }
                else
                  {
                    success = false;
                    ();
                    inputpos = fresh$macro$807
                  }
              }
            };
            if (success)
              {
                {
                  val fresh$macro$812: Int = inputpos;
                  {
                    var fresh$macro$811: Int = 0;
                    val fresh$macro$810: Int = JSonImpl2.this.points.length;
                    while$4(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                        {
                          inputpos = inputpos.+(1);
                          while$4()
                        }
                      else
                        ()
                    };
                    while$3(){
                      if (inputpos.<(inputsize).&&(fresh$macro$811.<(fresh$macro$810)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.points).charAt(fresh$macro$811))))
                        {
                          {
                            fresh$macro$811 = fresh$macro$811.+(1);
                            inputpos = inputpos.+(1)
                          };
                          while$3()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$811.==(fresh$macro$810))
                      {
                        success = true;
                        ()
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$812
                      }
                  }
                };
                if (success)
                  {
                    {
                      {
                        val fresh$macro$813: Int = inputpos;
                        while$5(){
                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                            {
                              inputpos = inputpos.+(1);
                              while$5()
                            }
                          else
                            ()
                        };
                        ();
                        success = true
                      };
                      if (success)
                        {
                          val fresh$macro$816: Int = inputpos;
                          {
                            {
                              val fresh$macro$818: Int = inputpos;
                              {
                                {
                                  val fresh$macro$820: Int = inputpos;
                                  {
                                    {
                                      val fresh$macro$822: Int = inputpos;
                                      {
                                        {
                                          val fresh$macro$824: Int = inputpos;
                                          {
                                            {
                                              val fresh$macro$826: Int = inputpos;
                                              {
                                                {
                                                  {
                                                    val fresh$macro$827: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] => JSObject = ((x: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]) => JSObject.apply(x));
                                                    {
                                                      {
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                          {
                                                            ();
                                                            inputpos = inputpos.+(1);
                                                            success = true
                                                          }
                                                        else
                                                          {
                                                            success = false;
                                                            ()
                                                          };
                                                        if (success)
                                                          {
                                                            var fresh$macro$828: Boolean = true;
                                                            val fresh$macro$829: scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = new scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]();
                                                            while$8(){
                                                              if (fresh$macro$828)
                                                                {
                                                                  {
                                                                    val fresh$macro$837: Int = inputpos;
                                                                    {
                                                                      {
                                                                        val fresh$macro$838: fastparsers.framework.parseresult.ParseResult[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue),String] = fresh$macro$1165.this.member(input, inputpos);
                                                                        success = fresh$macro$838.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$838.inputPos;
                                                                            fresh$macro$839 = fresh$macro$838.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$838.error
                                                                      };
                                                                      if (success)
                                                                        {
                                                                          fresh$macro$829.append(fresh$macro$839);
                                                                          {
                                                                            val fresh$macro$831: Int = inputpos;
                                                                            {
                                                                              {
                                                                                val fresh$macro$835: Int = inputpos;
                                                                                {
                                                                                  var fresh$macro$834: Int = 0;
                                                                                  val fresh$macro$833: Int = JSonImpl2.this.comma.length;
                                                                                  while$7(){
                                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                      {
                                                                                        inputpos = inputpos.+(1);
                                                                                        while$7()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  while$6(){
                                                                                    if (inputpos.<(inputsize).&&(fresh$macro$834.<(fresh$macro$833)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$834))))
                                                                                      {
                                                                                        {
                                                                                          fresh$macro$834 = fresh$macro$834.+(1);
                                                                                          inputpos = inputpos.+(1)
                                                                                        };
                                                                                        while$6()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  if (fresh$macro$834.==(fresh$macro$833))
                                                                                    {
                                                                                      success = true;
                                                                                      fresh$macro$836 = JSonImpl2.this.comma
                                                                                    }
                                                                                  else
                                                                                    {
                                                                                      success = false;
                                                                                      ();
                                                                                      inputpos = fresh$macro$835
                                                                                    }
                                                                                }
                                                                              };
                                                                              if (success.unary_!)
                                                                                {
                                                                                  fresh$macro$828 = false;
                                                                                  inputpos = fresh$macro$831
                                                                                }
                                                                              else
                                                                                ()
                                                                            }
                                                                          }
                                                                        }
                                                                      else
                                                                        {
                                                                          fresh$macro$828 = false;
                                                                          inputpos = fresh$macro$837
                                                                        }
                                                                    }
                                                                  };
                                                                  while$8()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            {
                                                              fresh$macro$830 = fresh$macro$829.toList;
                                                              success = true
                                                            }
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (success)
                                                        {
                                                          val fresh$macro$843: Int = inputpos;
                                                          {
                                                            var fresh$macro$842: Int = 0;
                                                            val fresh$macro$841: Int = JSonImpl2.this.closeBracket.length;
                                                            while$10(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$10()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            while$9(){
                                                              if (inputpos.<(inputsize).&&(fresh$macro$842.<(fresh$macro$841)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeBracket).charAt(fresh$macro$842))))
                                                                {
                                                                  {
                                                                    fresh$macro$842 = fresh$macro$842.+(1);
                                                                    inputpos = inputpos.+(1)
                                                                  };
                                                                  while$9()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (fresh$macro$842.==(fresh$macro$841))
                                                              {
                                                                success = true;
                                                                ()
                                                              }
                                                            else
                                                              {
                                                                success = false;
                                                                ();
                                                                inputpos = fresh$macro$843
                                                              }
                                                          }
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    if (success)
                                                      fresh$macro$844 = fresh$macro$827.apply(fresh$macro$830)
                                                    else
                                                      ()
                                                  };
                                                  fresh$macro$845 = fresh$macro$844
                                                };
                                                if (success.unary_!)
                                                  {
                                                    inputpos = fresh$macro$826;
                                                    {
                                                      {
                                                        val fresh$macro$846: List[JSValue] => JSArray = ((x: List[JSValue]) => JSArray.apply(x));
                                                        {
                                                          {
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                              {
                                                                ();
                                                                inputpos = inputpos.+(1);
                                                                success = true
                                                              }
                                                            else
                                                              {
                                                                success = false;
                                                                ()
                                                              };
                                                            if (success)
                                                              {
                                                                var fresh$macro$847: Boolean = true;
                                                                val fresh$macro$848: scala.collection.mutable.ListBuffer[JSValue] = new scala.collection.mutable.ListBuffer[JSValue]();
                                                                while$13(){
                                                                  if (fresh$macro$847)
                                                                    {
                                                                      {
                                                                        val fresh$macro$856: Int = inputpos;
                                                                        {
                                                                          {
                                                                            val fresh$macro$857: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.value(input, inputpos);
                                                                            success = fresh$macro$857.success;
                                                                            if (success)
                                                                              {
                                                                                inputpos = fresh$macro$857.inputPos;
                                                                                fresh$macro$858 = fresh$macro$857.result
                                                                              }
                                                                            else
                                                                              error = fresh$macro$857.error
                                                                          };
                                                                          if (success)
                                                                            {
                                                                              fresh$macro$848.append(fresh$macro$858);
                                                                              {
                                                                                val fresh$macro$850: Int = inputpos;
                                                                                {
                                                                                  {
                                                                                    val fresh$macro$854: Int = inputpos;
                                                                                    {
                                                                                      var fresh$macro$853: Int = 0;
                                                                                      val fresh$macro$852: Int = JSonImpl2.this.comma.length;
                                                                                      while$12(){
                                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                          {
                                                                                            inputpos = inputpos.+(1);
                                                                                            while$12()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      while$11(){
                                                                                        if (inputpos.<(inputsize).&&(fresh$macro$853.<(fresh$macro$852)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$853))))
                                                                                          {
                                                                                            {
                                                                                              fresh$macro$853 = fresh$macro$853.+(1);
                                                                                              inputpos = inputpos.+(1)
                                                                                            };
                                                                                            while$11()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      if (fresh$macro$853.==(fresh$macro$852))
                                                                                        {
                                                                                          success = true;
                                                                                          fresh$macro$855 = JSonImpl2.this.comma
                                                                                        }
                                                                                      else
                                                                                        {
                                                                                          success = false;
                                                                                          ();
                                                                                          inputpos = fresh$macro$854
                                                                                        }
                                                                                    }
                                                                                  };
                                                                                  if (success.unary_!)
                                                                                    {
                                                                                      fresh$macro$847 = false;
                                                                                      inputpos = fresh$macro$850
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                }
                                                                              }
                                                                            }
                                                                          else
                                                                            {
                                                                              fresh$macro$847 = false;
                                                                              inputpos = fresh$macro$856
                                                                            }
                                                                        }
                                                                      };
                                                                      while$13()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                {
                                                                  fresh$macro$849 = fresh$macro$848.toList;
                                                                  success = true
                                                                }
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (success)
                                                            {
                                                              val fresh$macro$862: Int = inputpos;
                                                              {
                                                                var fresh$macro$861: Int = 0;
                                                                val fresh$macro$860: Int = JSonImpl2.this.closeSBracket.length;
                                                                while$15(){
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$15()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                while$14(){
                                                                  if (inputpos.<(inputsize).&&(fresh$macro$861.<(fresh$macro$860)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeSBracket).charAt(fresh$macro$861))))
                                                                    {
                                                                      {
                                                                        fresh$macro$861 = fresh$macro$861.+(1);
                                                                        inputpos = inputpos.+(1)
                                                                      };
                                                                      while$14()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (fresh$macro$861.==(fresh$macro$860))
                                                                  {
                                                                    success = true;
                                                                    ()
                                                                  }
                                                                else
                                                                  {
                                                                    success = false;
                                                                    ();
                                                                    inputpos = fresh$macro$862
                                                                  }
                                                              }
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        if (success)
                                                          fresh$macro$863 = fresh$macro$846.apply(fresh$macro$849)
                                                        else
                                                          ()
                                                      };
                                                      fresh$macro$864 = fresh$macro$863
                                                    };
                                                    if (success)
                                                      fresh$macro$825 = fresh$macro$864
                                                    else
                                                      ()
                                                  }
                                                else
                                                  fresh$macro$825 = fresh$macro$845
                                              }
                                            };
                                            if (success.unary_!)
                                              {
                                                inputpos = fresh$macro$824;
                                                {
                                                  val fresh$macro$865: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSString = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSString.apply(x));
                                                  {
                                                    val fresh$macro$867: Int = inputpos;
                                                    {
                                                      while$17(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$17()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      val fresh$macro$866: Int = inputpos;
                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                        {
                                                          inputpos = inputpos.+(1);
                                                          while$16(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                              {
                                                                {
                                                                  if (input.apply(inputpos).==('\\'))
                                                                    inputpos = inputpos.+(1)
                                                                  else
                                                                    ();
                                                                  inputpos = inputpos.+(1)
                                                                };
                                                                while$16()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (inputpos.<(inputsize))
                                                            {
                                                              success = true;
                                                              inputpos = inputpos.+(1);
                                                              fresh$macro$868 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$866, inputpos)
                                                            }
                                                          else
                                                            {
                                                              success = false;
                                                              ();
                                                              inputpos = fresh$macro$867
                                                            }
                                                        }
                                                      else
                                                        {
                                                          success = false;
                                                          ();
                                                          inputpos = fresh$macro$867
                                                        }
                                                    }
                                                  };
                                                  if (success)
                                                    fresh$macro$869 = fresh$macro$865.apply(fresh$macro$868)
                                                  else
                                                    ()
                                                };
                                                if (success)
                                                  fresh$macro$823 = fresh$macro$869
                                                else
                                                  ()
                                              }
                                            else
                                              fresh$macro$823 = fresh$macro$825
                                          }
                                        };
                                        if (success.unary_!)
                                          {
                                            inputpos = fresh$macro$822;
                                            {
                                              val fresh$macro$870: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSDouble = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSDouble.apply(x));
                                              {
                                                val fresh$macro$874: Int = inputpos;
                                                {
                                                  while$21(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$21()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  var fresh$macro$871: Boolean = false;
                                                  val fresh$macro$872: Int = inputpos;
                                                  success = false;
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                    inputpos = inputpos.+(1)
                                                  else
                                                    ();
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                    {
                                                      inputpos = inputpos.+(1);
                                                      while$18(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$18()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                        {
                                                          inputpos = inputpos.+(1);
                                                          while$20(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                              {
                                                                inputpos = inputpos.+(1);
                                                                while$20()
                                                              }
                                                            else
                                                              ()
                                                          }
                                                        }
                                                      else
                                                        ();
                                                      success = true;
                                                      fresh$macro$873 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$872, inputpos)
                                                    }
                                                  else
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$19(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$19()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            success = true;
                                                            fresh$macro$873 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$872, inputpos)
                                                          }
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      ()
                                                }
                                              };
                                              if (success)
                                                fresh$macro$875 = fresh$macro$870.apply(fresh$macro$873)
                                              else
                                                ()
                                            };
                                            if (success)
                                              fresh$macro$821 = fresh$macro$875
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$821 = fresh$macro$823
                                      }
                                    };
                                    if (success.unary_!)
                                      {
                                        inputpos = fresh$macro$820;
                                        {
                                          {
                                            val fresh$macro$879: Int = inputpos;
                                            {
                                              var fresh$macro$878: Int = 0;
                                              val fresh$macro$877: Int = JSonImpl2.this.nullValue.length;
                                              while$23(){
                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                  {
                                                    inputpos = inputpos.+(1);
                                                    while$23()
                                                  }
                                                else
                                                  ()
                                              };
                                              while$22(){
                                                if (inputpos.<(inputsize).&&(fresh$macro$878.<(fresh$macro$877)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.nullValue).charAt(fresh$macro$878))))
                                                  {
                                                    {
                                                      fresh$macro$878 = fresh$macro$878.+(1);
                                                      inputpos = inputpos.+(1)
                                                    };
                                                    while$22()
                                                  }
                                                else
                                                  ()
                                              };
                                              if (fresh$macro$878.==(fresh$macro$877))
                                                {
                                                  success = true;
                                                  fresh$macro$880 = JSonImpl2.this.nullValue
                                                }
                                              else
                                                {
                                                  success = false;
                                                  ();
                                                  inputpos = fresh$macro$879
                                                }
                                            }
                                          };
                                          if (success)
                                            fresh$macro$881 = JSNull
                                          else
                                            ()
                                        };
                                        if (success)
                                          fresh$macro$819 = fresh$macro$881
                                        else
                                          ()
                                      }
                                    else
                                      fresh$macro$819 = fresh$macro$821
                                  }
                                };
                                if (success.unary_!)
                                  {
                                    inputpos = fresh$macro$818;
                                    {
                                      {
                                        val fresh$macro$885: Int = inputpos;
                                        {
                                          var fresh$macro$884: Int = 0;
                                          val fresh$macro$883: Int = JSonImpl2.this.trueValue.length;
                                          while$25(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$25()
                                              }
                                            else
                                              ()
                                          };
                                          while$24(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$884.<(fresh$macro$883)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.trueValue).charAt(fresh$macro$884))))
                                              {
                                                {
                                                  fresh$macro$884 = fresh$macro$884.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$24()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$884.==(fresh$macro$883))
                                            {
                                              success = true;
                                              fresh$macro$886 = JSonImpl2.this.trueValue
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$885
                                            }
                                        }
                                      };
                                      if (success)
                                        fresh$macro$887 = JSBool.apply(true)
                                      else
                                        ()
                                    };
                                    if (success)
                                      fresh$macro$817 = fresh$macro$887
                                    else
                                      ()
                                  }
                                else
                                  fresh$macro$817 = fresh$macro$819
                              }
                            };
                            if (success.unary_!)
                              {
                                inputpos = fresh$macro$816;
                                {
                                  {
                                    val fresh$macro$891: Int = inputpos;
                                    {
                                      var fresh$macro$890: Int = 0;
                                      val fresh$macro$889: Int = JSonImpl2.this.falseValue.length;
                                      while$27(){
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$27()
                                          }
                                        else
                                          ()
                                      };
                                      while$26(){
                                        if (inputpos.<(inputsize).&&(fresh$macro$890.<(fresh$macro$889)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.falseValue).charAt(fresh$macro$890))))
                                          {
                                            {
                                              fresh$macro$890 = fresh$macro$890.+(1);
                                              inputpos = inputpos.+(1)
                                            };
                                            while$26()
                                          }
                                        else
                                          ()
                                      };
                                      if (fresh$macro$890.==(fresh$macro$889))
                                        {
                                          success = true;
                                          fresh$macro$892 = JSonImpl2.this.falseValue
                                        }
                                      else
                                        {
                                          success = false;
                                          ();
                                          inputpos = fresh$macro$891
                                        }
                                    }
                                  };
                                  if (success)
                                    fresh$macro$893 = JSBool.apply(false)
                                  else
                                    ()
                                };
                                if (success)
                                  fresh$macro$815 = fresh$macro$893
                                else
                                  ()
                              }
                            else
                              fresh$macro$815 = fresh$macro$817
                          }
                        }
                      else
                        ()
                    };
                    fresh$macro$894 = fresh$macro$815
                  }
                else
                  ()
              }
            else
              ()
          };
          fastparsers.framework.parseresult.ParseResult.apply[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue), String](success, error, if (success)
            scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, JSValue](fresh$macro$808, fresh$macro$894)
          else
            null, inputpos)
        }
      }
    }
  };
  <synthetic> def member$default$2: Int = 0;
  def arr(input: Array[Char], fresh$macro$895: Int = 0): fastparsers.framework.parseresult.ParseResult[JSValue,String] = {
    var error: String = " ";
    {
      var inputpos: Int = fresh$macro$895;
      val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
      {
        val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
        {
          var success: Boolean = false;
          var fresh$macro$899: List[JSValue] = immutable.this.Nil;
          var fresh$macro$905: Array[Char] = null;
          var fresh$macro$909: JSValue = null;
          var fresh$macro$911: JSValue = null;
          var fresh$macro$913: JSValue = null;
          var fresh$macro$915: JSValue = null;
          var fresh$macro$917: JSValue = null;
          var fresh$macro$919: JSValue = null;
          var fresh$macro$924: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = immutable.this.Nil;
          var fresh$macro$930: Array[Char] = null;
          var fresh$macro$934: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$940: JSValue = null;
          var fresh$macro$941: (fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue) = null;
          var fresh$macro$946: JSObject = null;
          var fresh$macro$947: JSValue = null;
          var fresh$macro$949: JSValue = null;
          var fresh$macro$953: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$954: JSString = null;
          var fresh$macro$958: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$960: JSDouble = null;
          var fresh$macro$965: Array[Char] = null;
          var fresh$macro$966: JSNull.type = null;
          var fresh$macro$971: Array[Char] = null;
          var fresh$macro$972: JSBool = null;
          var fresh$macro$977: Array[Char] = null;
          var fresh$macro$978: JSBool = null;
          var fresh$macro$979: JSValue = null;
          var fresh$macro$984: JSArray = null;
          {
            val fresh$macro$896: List[JSValue] => JSArray = ((x: List[JSValue]) => JSArray.apply(x));
            {
              {
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                  {
                    ();
                    inputpos = inputpos.+(1);
                    success = true
                  }
                else
                  {
                    success = false;
                    ()
                  };
                if (success)
                  {
                    var fresh$macro$897: Boolean = true;
                    val fresh$macro$898: scala.collection.mutable.ListBuffer[JSValue] = new scala.collection.mutable.ListBuffer[JSValue]();
                    while$52(){
                      if (fresh$macro$897)
                        {
                          {
                            val fresh$macro$906: Int = inputpos;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$907: Int = inputpos;
                                    while$30(){
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$30()
                                        }
                                      else
                                        ()
                                    };
                                    ();
                                    success = true
                                  };
                                  if (success)
                                    {
                                      val fresh$macro$910: Int = inputpos;
                                      {
                                        {
                                          val fresh$macro$912: Int = inputpos;
                                          {
                                            {
                                              val fresh$macro$914: Int = inputpos;
                                              {
                                                {
                                                  val fresh$macro$916: Int = inputpos;
                                                  {
                                                    {
                                                      val fresh$macro$918: Int = inputpos;
                                                      {
                                                        {
                                                          val fresh$macro$920: Int = inputpos;
                                                          {
                                                            {
                                                              {
                                                                val fresh$macro$921: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] => JSObject = ((x: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]) => JSObject.apply(x));
                                                                {
                                                                  {
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                                      {
                                                                        ();
                                                                        inputpos = inputpos.+(1);
                                                                        success = true
                                                                      }
                                                                    else
                                                                      {
                                                                        success = false;
                                                                        ()
                                                                      };
                                                                    if (success)
                                                                      {
                                                                        var fresh$macro$922: Boolean = true;
                                                                        val fresh$macro$923: scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = new scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]();
                                                                        while$37(){
                                                                          if (fresh$macro$922)
                                                                            {
                                                                              {
                                                                                val fresh$macro$931: Int = inputpos;
                                                                                {
                                                                                  {
                                                                                    {
                                                                                      {
                                                                                        val fresh$macro$933: Int = inputpos;
                                                                                        {
                                                                                          while$34(){
                                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                              {
                                                                                                inputpos = inputpos.+(1);
                                                                                                while$34()
                                                                                              }
                                                                                            else
                                                                                              ()
                                                                                          };
                                                                                          val fresh$macro$932: Int = inputpos;
                                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                                            {
                                                                                              inputpos = inputpos.+(1);
                                                                                              while$33(){
                                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                                                  {
                                                                                                    {
                                                                                                      if (input.apply(inputpos).==('\\'))
                                                                                                        inputpos = inputpos.+(1)
                                                                                                      else
                                                                                                        ();
                                                                                                      inputpos = inputpos.+(1)
                                                                                                    };
                                                                                                    while$33()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              if (inputpos.<(inputsize))
                                                                                                {
                                                                                                  success = true;
                                                                                                  inputpos = inputpos.+(1);
                                                                                                  fresh$macro$934 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$932, inputpos)
                                                                                                }
                                                                                              else
                                                                                                {
                                                                                                  success = false;
                                                                                                  ();
                                                                                                  inputpos = fresh$macro$933
                                                                                                }
                                                                                            }
                                                                                          else
                                                                                            {
                                                                                              success = false;
                                                                                              ();
                                                                                              inputpos = fresh$macro$933
                                                                                            }
                                                                                        }
                                                                                      };
                                                                                      if (success)
                                                                                        {
                                                                                          {
                                                                                            val fresh$macro$938: Int = inputpos;
                                                                                            {
                                                                                              var fresh$macro$937: Int = 0;
                                                                                              val fresh$macro$936: Int = JSonImpl2.this.points.length;
                                                                                              while$36(){
                                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                  {
                                                                                                    inputpos = inputpos.+(1);
                                                                                                    while$36()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              while$35(){
                                                                                                if (inputpos.<(inputsize).&&(fresh$macro$937.<(fresh$macro$936)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.points).charAt(fresh$macro$937))))
                                                                                                  {
                                                                                                    {
                                                                                                      fresh$macro$937 = fresh$macro$937.+(1);
                                                                                                      inputpos = inputpos.+(1)
                                                                                                    };
                                                                                                    while$35()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              if (fresh$macro$937.==(fresh$macro$936))
                                                                                                {
                                                                                                  success = true;
                                                                                                  ()
                                                                                                }
                                                                                              else
                                                                                                {
                                                                                                  success = false;
                                                                                                  ();
                                                                                                  inputpos = fresh$macro$938
                                                                                                }
                                                                                            }
                                                                                          };
                                                                                          if (success)
                                                                                            {
                                                                                              val fresh$macro$939: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.value(input, inputpos);
                                                                                              success = fresh$macro$939.success;
                                                                                              if (success)
                                                                                                {
                                                                                                  inputpos = fresh$macro$939.inputPos;
                                                                                                  fresh$macro$940 = fresh$macro$939.result
                                                                                                }
                                                                                              else
                                                                                                error = fresh$macro$939.error
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    fresh$macro$941 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, JSValue](fresh$macro$934, fresh$macro$940)
                                                                                  };
                                                                                  if (success)
                                                                                    {
                                                                                      fresh$macro$923.append(fresh$macro$941);
                                                                                      {
                                                                                        val fresh$macro$925: Int = inputpos;
                                                                                        {
                                                                                          {
                                                                                            val fresh$macro$929: Int = inputpos;
                                                                                            {
                                                                                              var fresh$macro$928: Int = 0;
                                                                                              val fresh$macro$927: Int = JSonImpl2.this.comma.length;
                                                                                              while$32(){
                                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                  {
                                                                                                    inputpos = inputpos.+(1);
                                                                                                    while$32()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              while$31(){
                                                                                                if (inputpos.<(inputsize).&&(fresh$macro$928.<(fresh$macro$927)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$928))))
                                                                                                  {
                                                                                                    {
                                                                                                      fresh$macro$928 = fresh$macro$928.+(1);
                                                                                                      inputpos = inputpos.+(1)
                                                                                                    };
                                                                                                    while$31()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              if (fresh$macro$928.==(fresh$macro$927))
                                                                                                {
                                                                                                  success = true;
                                                                                                  fresh$macro$930 = JSonImpl2.this.comma
                                                                                                }
                                                                                              else
                                                                                                {
                                                                                                  success = false;
                                                                                                  ();
                                                                                                  inputpos = fresh$macro$929
                                                                                                }
                                                                                            }
                                                                                          };
                                                                                          if (success.unary_!)
                                                                                            {
                                                                                              fresh$macro$922 = false;
                                                                                              inputpos = fresh$macro$925
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  else
                                                                                    {
                                                                                      fresh$macro$922 = false;
                                                                                      inputpos = fresh$macro$931
                                                                                    }
                                                                                }
                                                                              };
                                                                              while$37()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        {
                                                                          fresh$macro$924 = fresh$macro$923.toList;
                                                                          success = true
                                                                        }
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  if (success)
                                                                    {
                                                                      val fresh$macro$945: Int = inputpos;
                                                                      {
                                                                        var fresh$macro$944: Int = 0;
                                                                        val fresh$macro$943: Int = JSonImpl2.this.closeBracket.length;
                                                                        while$39(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$39()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$38(){
                                                                          if (inputpos.<(inputsize).&&(fresh$macro$944.<(fresh$macro$943)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeBracket).charAt(fresh$macro$944))))
                                                                            {
                                                                              {
                                                                                fresh$macro$944 = fresh$macro$944.+(1);
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$38()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$944.==(fresh$macro$943))
                                                                          {
                                                                            success = true;
                                                                            ()
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$945
                                                                          }
                                                                      }
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (success)
                                                                  fresh$macro$946 = fresh$macro$921.apply(fresh$macro$924)
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$947 = fresh$macro$946
                                                            };
                                                            if (success.unary_!)
                                                              {
                                                                inputpos = fresh$macro$920;
                                                                {
                                                                  val fresh$macro$948: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.arr(input, inputpos);
                                                                  success = fresh$macro$948.success;
                                                                  if (success)
                                                                    {
                                                                      inputpos = fresh$macro$948.inputPos;
                                                                      fresh$macro$949 = fresh$macro$948.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$948.error
                                                                };
                                                                if (success)
                                                                  fresh$macro$919 = fresh$macro$949
                                                                else
                                                                  ()
                                                              }
                                                            else
                                                              fresh$macro$919 = fresh$macro$947
                                                          }
                                                        };
                                                        if (success.unary_!)
                                                          {
                                                            inputpos = fresh$macro$918;
                                                            {
                                                              val fresh$macro$950: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSString = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSString.apply(x));
                                                              {
                                                                val fresh$macro$952: Int = inputpos;
                                                                {
                                                                  while$41(){
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$41()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  val fresh$macro$951: Int = inputpos;
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$40(){
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                          {
                                                                            {
                                                                              if (input.apply(inputpos).==('\\'))
                                                                                inputpos = inputpos.+(1)
                                                                              else
                                                                                ();
                                                                              inputpos = inputpos.+(1)
                                                                            };
                                                                            while$40()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      if (inputpos.<(inputsize))
                                                                        {
                                                                          success = true;
                                                                          inputpos = inputpos.+(1);
                                                                          fresh$macro$953 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$951, inputpos)
                                                                        }
                                                                      else
                                                                        {
                                                                          success = false;
                                                                          ();
                                                                          inputpos = fresh$macro$952
                                                                        }
                                                                    }
                                                                  else
                                                                    {
                                                                      success = false;
                                                                      ();
                                                                      inputpos = fresh$macro$952
                                                                    }
                                                                }
                                                              };
                                                              if (success)
                                                                fresh$macro$954 = fresh$macro$950.apply(fresh$macro$953)
                                                              else
                                                                ()
                                                            };
                                                            if (success)
                                                              fresh$macro$917 = fresh$macro$954
                                                            else
                                                              ()
                                                          }
                                                        else
                                                          fresh$macro$917 = fresh$macro$919
                                                      }
                                                    };
                                                    if (success.unary_!)
                                                      {
                                                        inputpos = fresh$macro$916;
                                                        {
                                                          val fresh$macro$955: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSDouble = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSDouble.apply(x));
                                                          {
                                                            val fresh$macro$959: Int = inputpos;
                                                            {
                                                              while$45(){
                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                  {
                                                                    inputpos = inputpos.+(1);
                                                                    while$45()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              var fresh$macro$956: Boolean = false;
                                                              val fresh$macro$957: Int = inputpos;
                                                              success = false;
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                                inputpos = inputpos.+(1)
                                                              else
                                                                ();
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$42(){
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$42()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$44(){
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            while$44()
                                                                          }
                                                                        else
                                                                          ()
                                                                      }
                                                                    }
                                                                  else
                                                                    ();
                                                                  success = true;
                                                                  fresh$macro$958 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$957, inputpos)
                                                                }
                                                              else
                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                  {
                                                                    inputpos = inputpos.+(1);
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$43(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$43()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        success = true;
                                                                        fresh$macro$958 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$957, inputpos)
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                else
                                                                  ()
                                                            }
                                                          };
                                                          if (success)
                                                            fresh$macro$960 = fresh$macro$955.apply(fresh$macro$958)
                                                          else
                                                            ()
                                                        };
                                                        if (success)
                                                          fresh$macro$915 = fresh$macro$960
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      fresh$macro$915 = fresh$macro$917
                                                  }
                                                };
                                                if (success.unary_!)
                                                  {
                                                    inputpos = fresh$macro$914;
                                                    {
                                                      {
                                                        val fresh$macro$964: Int = inputpos;
                                                        {
                                                          var fresh$macro$963: Int = 0;
                                                          val fresh$macro$962: Int = JSonImpl2.this.nullValue.length;
                                                          while$47(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                              {
                                                                inputpos = inputpos.+(1);
                                                                while$47()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          while$46(){
                                                            if (inputpos.<(inputsize).&&(fresh$macro$963.<(fresh$macro$962)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.nullValue).charAt(fresh$macro$963))))
                                                              {
                                                                {
                                                                  fresh$macro$963 = fresh$macro$963.+(1);
                                                                  inputpos = inputpos.+(1)
                                                                };
                                                                while$46()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (fresh$macro$963.==(fresh$macro$962))
                                                            {
                                                              success = true;
                                                              fresh$macro$965 = JSonImpl2.this.nullValue
                                                            }
                                                          else
                                                            {
                                                              success = false;
                                                              ();
                                                              inputpos = fresh$macro$964
                                                            }
                                                        }
                                                      };
                                                      if (success)
                                                        fresh$macro$966 = JSNull
                                                      else
                                                        ()
                                                    };
                                                    if (success)
                                                      fresh$macro$913 = fresh$macro$966
                                                    else
                                                      ()
                                                  }
                                                else
                                                  fresh$macro$913 = fresh$macro$915
                                              }
                                            };
                                            if (success.unary_!)
                                              {
                                                inputpos = fresh$macro$912;
                                                {
                                                  {
                                                    val fresh$macro$970: Int = inputpos;
                                                    {
                                                      var fresh$macro$969: Int = 0;
                                                      val fresh$macro$968: Int = JSonImpl2.this.trueValue.length;
                                                      while$49(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$49()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      while$48(){
                                                        if (inputpos.<(inputsize).&&(fresh$macro$969.<(fresh$macro$968)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.trueValue).charAt(fresh$macro$969))))
                                                          {
                                                            {
                                                              fresh$macro$969 = fresh$macro$969.+(1);
                                                              inputpos = inputpos.+(1)
                                                            };
                                                            while$48()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (fresh$macro$969.==(fresh$macro$968))
                                                        {
                                                          success = true;
                                                          fresh$macro$971 = JSonImpl2.this.trueValue
                                                        }
                                                      else
                                                        {
                                                          success = false;
                                                          ();
                                                          inputpos = fresh$macro$970
                                                        }
                                                    }
                                                  };
                                                  if (success)
                                                    fresh$macro$972 = JSBool.apply(true)
                                                  else
                                                    ()
                                                };
                                                if (success)
                                                  fresh$macro$911 = fresh$macro$972
                                                else
                                                  ()
                                              }
                                            else
                                              fresh$macro$911 = fresh$macro$913
                                          }
                                        };
                                        if (success.unary_!)
                                          {
                                            inputpos = fresh$macro$910;
                                            {
                                              {
                                                val fresh$macro$976: Int = inputpos;
                                                {
                                                  var fresh$macro$975: Int = 0;
                                                  val fresh$macro$974: Int = JSonImpl2.this.falseValue.length;
                                                  while$51(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$51()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  while$50(){
                                                    if (inputpos.<(inputsize).&&(fresh$macro$975.<(fresh$macro$974)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.falseValue).charAt(fresh$macro$975))))
                                                      {
                                                        {
                                                          fresh$macro$975 = fresh$macro$975.+(1);
                                                          inputpos = inputpos.+(1)
                                                        };
                                                        while$50()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  if (fresh$macro$975.==(fresh$macro$974))
                                                    {
                                                      success = true;
                                                      fresh$macro$977 = JSonImpl2.this.falseValue
                                                    }
                                                  else
                                                    {
                                                      success = false;
                                                      ();
                                                      inputpos = fresh$macro$976
                                                    }
                                                }
                                              };
                                              if (success)
                                                fresh$macro$978 = JSBool.apply(false)
                                              else
                                                ()
                                            };
                                            if (success)
                                              fresh$macro$909 = fresh$macro$978
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$909 = fresh$macro$911
                                      }
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$979 = fresh$macro$909
                              };
                              if (success)
                                {
                                  fresh$macro$898.append(fresh$macro$979);
                                  {
                                    val fresh$macro$900: Int = inputpos;
                                    {
                                      {
                                        val fresh$macro$904: Int = inputpos;
                                        {
                                          var fresh$macro$903: Int = 0;
                                          val fresh$macro$902: Int = JSonImpl2.this.comma.length;
                                          while$29(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$29()
                                              }
                                            else
                                              ()
                                          };
                                          while$28(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$903.<(fresh$macro$902)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$903))))
                                              {
                                                {
                                                  fresh$macro$903 = fresh$macro$903.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$28()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$903.==(fresh$macro$902))
                                            {
                                              success = true;
                                              fresh$macro$905 = JSonImpl2.this.comma
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$904
                                            }
                                        }
                                      };
                                      if (success.unary_!)
                                        {
                                          fresh$macro$897 = false;
                                          inputpos = fresh$macro$900
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$897 = false;
                                  inputpos = fresh$macro$906
                                }
                            }
                          };
                          while$52()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$899 = fresh$macro$898.toList;
                      success = true
                    }
                  }
                else
                  ()
              };
              if (success)
                {
                  val fresh$macro$983: Int = inputpos;
                  {
                    var fresh$macro$982: Int = 0;
                    val fresh$macro$981: Int = JSonImpl2.this.closeSBracket.length;
                    while$54(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                        {
                          inputpos = inputpos.+(1);
                          while$54()
                        }
                      else
                        ()
                    };
                    while$53(){
                      if (inputpos.<(inputsize).&&(fresh$macro$982.<(fresh$macro$981)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeSBracket).charAt(fresh$macro$982))))
                        {
                          {
                            fresh$macro$982 = fresh$macro$982.+(1);
                            inputpos = inputpos.+(1)
                          };
                          while$53()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$982.==(fresh$macro$981))
                      {
                        success = true;
                        ()
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$983
                      }
                  }
                }
              else
                ()
            };
            if (success)
              fresh$macro$984 = fresh$macro$896.apply(fresh$macro$899)
            else
              ()
          };
          fastparsers.framework.parseresult.ParseResult.apply[JSValue, String](success, error, if (success)
            fresh$macro$984
          else
            null, inputpos)
        }
      }
    }
  };
  <synthetic> def arr$default$2: Int = 0;
  def value(input: Array[Char], fresh$macro$985: Int = 0): fastparsers.framework.parseresult.ParseResult[JSValue,String] = {
    var error: String = " ";
    {
      var inputpos: Int = fresh$macro$985;
      val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
      {
        val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
        {
          var success: Boolean = false;
          var fresh$macro$988: JSValue = null;
          var fresh$macro$990: JSValue = null;
          var fresh$macro$992: JSValue = null;
          var fresh$macro$994: JSValue = null;
          var fresh$macro$996: JSValue = null;
          var fresh$macro$998: JSValue = null;
          var fresh$macro$1003: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = immutable.this.Nil;
          var fresh$macro$1009: Array[Char] = null;
          var fresh$macro$1013: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1019: JSValue = null;
          var fresh$macro$1020: (fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue) = null;
          var fresh$macro$1025: JSObject = null;
          var fresh$macro$1026: JSValue = null;
          var fresh$macro$1030: List[JSValue] = immutable.this.Nil;
          var fresh$macro$1036: Array[Char] = null;
          var fresh$macro$1039: JSValue = null;
          var fresh$macro$1044: JSArray = null;
          var fresh$macro$1045: JSValue = null;
          var fresh$macro$1049: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1050: JSString = null;
          var fresh$macro$1054: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1056: JSDouble = null;
          var fresh$macro$1061: Array[Char] = null;
          var fresh$macro$1062: JSNull.type = null;
          var fresh$macro$1067: Array[Char] = null;
          var fresh$macro$1068: JSBool = null;
          var fresh$macro$1073: Array[Char] = null;
          var fresh$macro$1074: JSBool = null;
          {
            {
              val fresh$macro$986: Int = inputpos;
              while$55(){
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                  {
                    inputpos = inputpos.+(1);
                    while$55()
                  }
                else
                  ()
              };
              ();
              success = true
            };
            if (success)
              {
                val fresh$macro$989: Int = inputpos;
                {
                  {
                    val fresh$macro$991: Int = inputpos;
                    {
                      {
                        val fresh$macro$993: Int = inputpos;
                        {
                          {
                            val fresh$macro$995: Int = inputpos;
                            {
                              {
                                val fresh$macro$997: Int = inputpos;
                                {
                                  {
                                    val fresh$macro$999: Int = inputpos;
                                    {
                                      {
                                        {
                                          val fresh$macro$1000: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] => JSObject = ((x: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]) => JSObject.apply(x));
                                          {
                                            {
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                {
                                                  ();
                                                  inputpos = inputpos.+(1);
                                                  success = true
                                                }
                                              else
                                                {
                                                  success = false;
                                                  ()
                                                };
                                              if (success)
                                                {
                                                  var fresh$macro$1001: Boolean = true;
                                                  val fresh$macro$1002: scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = new scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]();
                                                  while$62(){
                                                    if (fresh$macro$1001)
                                                      {
                                                        {
                                                          val fresh$macro$1010: Int = inputpos;
                                                          {
                                                            {
                                                              {
                                                                {
                                                                  val fresh$macro$1012: Int = inputpos;
                                                                  {
                                                                    while$59(){
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                        {
                                                                          inputpos = inputpos.+(1);
                                                                          while$59()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    val fresh$macro$1011: Int = inputpos;
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$58(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                            {
                                                                              {
                                                                                if (input.apply(inputpos).==('\\'))
                                                                                  inputpos = inputpos.+(1)
                                                                                else
                                                                                  ();
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$58()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (inputpos.<(inputsize))
                                                                          {
                                                                            success = true;
                                                                            inputpos = inputpos.+(1);
                                                                            fresh$macro$1013 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1011, inputpos)
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$1012
                                                                          }
                                                                      }
                                                                    else
                                                                      {
                                                                        success = false;
                                                                        ();
                                                                        inputpos = fresh$macro$1012
                                                                      }
                                                                  }
                                                                };
                                                                if (success)
                                                                  {
                                                                    {
                                                                      val fresh$macro$1017: Int = inputpos;
                                                                      {
                                                                        var fresh$macro$1016: Int = 0;
                                                                        val fresh$macro$1015: Int = JSonImpl2.this.points.length;
                                                                        while$61(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$61()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$60(){
                                                                          if (inputpos.<(inputsize).&&(fresh$macro$1016.<(fresh$macro$1015)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.points).charAt(fresh$macro$1016))))
                                                                            {
                                                                              {
                                                                                fresh$macro$1016 = fresh$macro$1016.+(1);
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$60()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$1016.==(fresh$macro$1015))
                                                                          {
                                                                            success = true;
                                                                            ()
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$1017
                                                                          }
                                                                      }
                                                                    };
                                                                    if (success)
                                                                      {
                                                                        val fresh$macro$1018: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.value(input, inputpos);
                                                                        success = fresh$macro$1018.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$1018.inputPos;
                                                                            fresh$macro$1019 = fresh$macro$1018.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$1018.error
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$1020 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, JSValue](fresh$macro$1013, fresh$macro$1019)
                                                            };
                                                            if (success)
                                                              {
                                                                fresh$macro$1002.append(fresh$macro$1020);
                                                                {
                                                                  val fresh$macro$1004: Int = inputpos;
                                                                  {
                                                                    {
                                                                      val fresh$macro$1008: Int = inputpos;
                                                                      {
                                                                        var fresh$macro$1007: Int = 0;
                                                                        val fresh$macro$1006: Int = JSonImpl2.this.comma.length;
                                                                        while$57(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$57()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$56(){
                                                                          if (inputpos.<(inputsize).&&(fresh$macro$1007.<(fresh$macro$1006)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$1007))))
                                                                            {
                                                                              {
                                                                                fresh$macro$1007 = fresh$macro$1007.+(1);
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$56()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$1007.==(fresh$macro$1006))
                                                                          {
                                                                            success = true;
                                                                            fresh$macro$1009 = JSonImpl2.this.comma
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$1008
                                                                          }
                                                                      }
                                                                    };
                                                                    if (success.unary_!)
                                                                      {
                                                                        fresh$macro$1001 = false;
                                                                        inputpos = fresh$macro$1004
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                }
                                                              }
                                                            else
                                                              {
                                                                fresh$macro$1001 = false;
                                                                inputpos = fresh$macro$1010
                                                              }
                                                          }
                                                        };
                                                        while$62()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  {
                                                    fresh$macro$1003 = fresh$macro$1002.toList;
                                                    success = true
                                                  }
                                                }
                                              else
                                                ()
                                            };
                                            if (success)
                                              {
                                                val fresh$macro$1024: Int = inputpos;
                                                {
                                                  var fresh$macro$1023: Int = 0;
                                                  val fresh$macro$1022: Int = JSonImpl2.this.closeBracket.length;
                                                  while$64(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$64()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  while$63(){
                                                    if (inputpos.<(inputsize).&&(fresh$macro$1023.<(fresh$macro$1022)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeBracket).charAt(fresh$macro$1023))))
                                                      {
                                                        {
                                                          fresh$macro$1023 = fresh$macro$1023.+(1);
                                                          inputpos = inputpos.+(1)
                                                        };
                                                        while$63()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  if (fresh$macro$1023.==(fresh$macro$1022))
                                                    {
                                                      success = true;
                                                      ()
                                                    }
                                                  else
                                                    {
                                                      success = false;
                                                      ();
                                                      inputpos = fresh$macro$1024
                                                    }
                                                }
                                              }
                                            else
                                              ()
                                          };
                                          if (success)
                                            fresh$macro$1025 = fresh$macro$1000.apply(fresh$macro$1003)
                                          else
                                            ()
                                        };
                                        fresh$macro$1026 = fresh$macro$1025
                                      };
                                      if (success.unary_!)
                                        {
                                          inputpos = fresh$macro$999;
                                          {
                                            {
                                              val fresh$macro$1027: List[JSValue] => JSArray = ((x: List[JSValue]) => JSArray.apply(x));
                                              {
                                                {
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                    {
                                                      ();
                                                      inputpos = inputpos.+(1);
                                                      success = true
                                                    }
                                                  else
                                                    {
                                                      success = false;
                                                      ()
                                                    };
                                                  if (success)
                                                    {
                                                      var fresh$macro$1028: Boolean = true;
                                                      val fresh$macro$1029: scala.collection.mutable.ListBuffer[JSValue] = new scala.collection.mutable.ListBuffer[JSValue]();
                                                      while$67(){
                                                        if (fresh$macro$1028)
                                                          {
                                                            {
                                                              val fresh$macro$1037: Int = inputpos;
                                                              {
                                                                {
                                                                  val fresh$macro$1038: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.value(input, inputpos);
                                                                  success = fresh$macro$1038.success;
                                                                  if (success)
                                                                    {
                                                                      inputpos = fresh$macro$1038.inputPos;
                                                                      fresh$macro$1039 = fresh$macro$1038.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$1038.error
                                                                };
                                                                if (success)
                                                                  {
                                                                    fresh$macro$1029.append(fresh$macro$1039);
                                                                    {
                                                                      val fresh$macro$1031: Int = inputpos;
                                                                      {
                                                                        {
                                                                          val fresh$macro$1035: Int = inputpos;
                                                                          {
                                                                            var fresh$macro$1034: Int = 0;
                                                                            val fresh$macro$1033: Int = JSonImpl2.this.comma.length;
                                                                            while$66(){
                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                {
                                                                                  inputpos = inputpos.+(1);
                                                                                  while$66()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            while$65(){
                                                                              if (inputpos.<(inputsize).&&(fresh$macro$1034.<(fresh$macro$1033)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$1034))))
                                                                                {
                                                                                  {
                                                                                    fresh$macro$1034 = fresh$macro$1034.+(1);
                                                                                    inputpos = inputpos.+(1)
                                                                                  };
                                                                                  while$65()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            if (fresh$macro$1034.==(fresh$macro$1033))
                                                                              {
                                                                                success = true;
                                                                                fresh$macro$1036 = JSonImpl2.this.comma
                                                                              }
                                                                            else
                                                                              {
                                                                                success = false;
                                                                                ();
                                                                                inputpos = fresh$macro$1035
                                                                              }
                                                                          }
                                                                        };
                                                                        if (success.unary_!)
                                                                          {
                                                                            fresh$macro$1028 = false;
                                                                            inputpos = fresh$macro$1031
                                                                          }
                                                                        else
                                                                          ()
                                                                      }
                                                                    }
                                                                  }
                                                                else
                                                                  {
                                                                    fresh$macro$1028 = false;
                                                                    inputpos = fresh$macro$1037
                                                                  }
                                                              }
                                                            };
                                                            while$67()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      {
                                                        fresh$macro$1030 = fresh$macro$1029.toList;
                                                        success = true
                                                      }
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (success)
                                                  {
                                                    val fresh$macro$1043: Int = inputpos;
                                                    {
                                                      var fresh$macro$1042: Int = 0;
                                                      val fresh$macro$1041: Int = JSonImpl2.this.closeSBracket.length;
                                                      while$69(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$69()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      while$68(){
                                                        if (inputpos.<(inputsize).&&(fresh$macro$1042.<(fresh$macro$1041)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeSBracket).charAt(fresh$macro$1042))))
                                                          {
                                                            {
                                                              fresh$macro$1042 = fresh$macro$1042.+(1);
                                                              inputpos = inputpos.+(1)
                                                            };
                                                            while$68()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (fresh$macro$1042.==(fresh$macro$1041))
                                                        {
                                                          success = true;
                                                          ()
                                                        }
                                                      else
                                                        {
                                                          success = false;
                                                          ();
                                                          inputpos = fresh$macro$1043
                                                        }
                                                    }
                                                  }
                                                else
                                                  ()
                                              };
                                              if (success)
                                                fresh$macro$1044 = fresh$macro$1027.apply(fresh$macro$1030)
                                              else
                                                ()
                                            };
                                            fresh$macro$1045 = fresh$macro$1044
                                          };
                                          if (success)
                                            fresh$macro$998 = fresh$macro$1045
                                          else
                                            ()
                                        }
                                      else
                                        fresh$macro$998 = fresh$macro$1026
                                    }
                                  };
                                  if (success.unary_!)
                                    {
                                      inputpos = fresh$macro$997;
                                      {
                                        val fresh$macro$1046: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSString = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSString.apply(x));
                                        {
                                          val fresh$macro$1048: Int = inputpos;
                                          {
                                            while$71(){
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$71()
                                                }
                                              else
                                                ()
                                            };
                                            val fresh$macro$1047: Int = inputpos;
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$70(){
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                    {
                                                      {
                                                        if (input.apply(inputpos).==('\\'))
                                                          inputpos = inputpos.+(1)
                                                        else
                                                          ();
                                                        inputpos = inputpos.+(1)
                                                      };
                                                      while$70()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (inputpos.<(inputsize))
                                                  {
                                                    success = true;
                                                    inputpos = inputpos.+(1);
                                                    fresh$macro$1049 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1047, inputpos)
                                                  }
                                                else
                                                  {
                                                    success = false;
                                                    ();
                                                    inputpos = fresh$macro$1048
                                                  }
                                              }
                                            else
                                              {
                                                success = false;
                                                ();
                                                inputpos = fresh$macro$1048
                                              }
                                          }
                                        };
                                        if (success)
                                          fresh$macro$1050 = fresh$macro$1046.apply(fresh$macro$1049)
                                        else
                                          ()
                                      };
                                      if (success)
                                        fresh$macro$996 = fresh$macro$1050
                                      else
                                        ()
                                    }
                                  else
                                    fresh$macro$996 = fresh$macro$998
                                }
                              };
                              if (success.unary_!)
                                {
                                  inputpos = fresh$macro$995;
                                  {
                                    val fresh$macro$1051: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSDouble = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSDouble.apply(x));
                                    {
                                      val fresh$macro$1055: Int = inputpos;
                                      {
                                        while$75(){
                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                            {
                                              inputpos = inputpos.+(1);
                                              while$75()
                                            }
                                          else
                                            ()
                                        };
                                        var fresh$macro$1052: Boolean = false;
                                        val fresh$macro$1053: Int = inputpos;
                                        success = false;
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                          inputpos = inputpos.+(1)
                                        else
                                          ();
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$72(){
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$72()
                                                }
                                              else
                                                ()
                                            };
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$74(){
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                    {
                                                      inputpos = inputpos.+(1);
                                                      while$74()
                                                    }
                                                  else
                                                    ()
                                                }
                                              }
                                            else
                                              ();
                                            success = true;
                                            fresh$macro$1054 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1053, inputpos)
                                          }
                                        else
                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                            {
                                              inputpos = inputpos.+(1);
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$73(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$73()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  success = true;
                                                  fresh$macro$1054 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1053, inputpos)
                                                }
                                              else
                                                ()
                                            }
                                          else
                                            ()
                                      }
                                    };
                                    if (success)
                                      fresh$macro$1056 = fresh$macro$1051.apply(fresh$macro$1054)
                                    else
                                      ()
                                  };
                                  if (success)
                                    fresh$macro$994 = fresh$macro$1056
                                  else
                                    ()
                                }
                              else
                                fresh$macro$994 = fresh$macro$996
                            }
                          };
                          if (success.unary_!)
                            {
                              inputpos = fresh$macro$993;
                              {
                                {
                                  val fresh$macro$1060: Int = inputpos;
                                  {
                                    var fresh$macro$1059: Int = 0;
                                    val fresh$macro$1058: Int = JSonImpl2.this.nullValue.length;
                                    while$77(){
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$77()
                                        }
                                      else
                                        ()
                                    };
                                    while$76(){
                                      if (inputpos.<(inputsize).&&(fresh$macro$1059.<(fresh$macro$1058)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.nullValue).charAt(fresh$macro$1059))))
                                        {
                                          {
                                            fresh$macro$1059 = fresh$macro$1059.+(1);
                                            inputpos = inputpos.+(1)
                                          };
                                          while$76()
                                        }
                                      else
                                        ()
                                    };
                                    if (fresh$macro$1059.==(fresh$macro$1058))
                                      {
                                        success = true;
                                        fresh$macro$1061 = JSonImpl2.this.nullValue
                                      }
                                    else
                                      {
                                        success = false;
                                        ();
                                        inputpos = fresh$macro$1060
                                      }
                                  }
                                };
                                if (success)
                                  fresh$macro$1062 = JSNull
                                else
                                  ()
                              };
                              if (success)
                                fresh$macro$992 = fresh$macro$1062
                              else
                                ()
                            }
                          else
                            fresh$macro$992 = fresh$macro$994
                        }
                      };
                      if (success.unary_!)
                        {
                          inputpos = fresh$macro$991;
                          {
                            {
                              val fresh$macro$1066: Int = inputpos;
                              {
                                var fresh$macro$1065: Int = 0;
                                val fresh$macro$1064: Int = JSonImpl2.this.trueValue.length;
                                while$79(){
                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                    {
                                      inputpos = inputpos.+(1);
                                      while$79()
                                    }
                                  else
                                    ()
                                };
                                while$78(){
                                  if (inputpos.<(inputsize).&&(fresh$macro$1065.<(fresh$macro$1064)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.trueValue).charAt(fresh$macro$1065))))
                                    {
                                      {
                                        fresh$macro$1065 = fresh$macro$1065.+(1);
                                        inputpos = inputpos.+(1)
                                      };
                                      while$78()
                                    }
                                  else
                                    ()
                                };
                                if (fresh$macro$1065.==(fresh$macro$1064))
                                  {
                                    success = true;
                                    fresh$macro$1067 = JSonImpl2.this.trueValue
                                  }
                                else
                                  {
                                    success = false;
                                    ();
                                    inputpos = fresh$macro$1066
                                  }
                              }
                            };
                            if (success)
                              fresh$macro$1068 = JSBool.apply(true)
                            else
                              ()
                          };
                          if (success)
                            fresh$macro$990 = fresh$macro$1068
                          else
                            ()
                        }
                      else
                        fresh$macro$990 = fresh$macro$992
                    }
                  };
                  if (success.unary_!)
                    {
                      inputpos = fresh$macro$989;
                      {
                        {
                          val fresh$macro$1072: Int = inputpos;
                          {
                            var fresh$macro$1071: Int = 0;
                            val fresh$macro$1070: Int = JSonImpl2.this.falseValue.length;
                            while$81(){
                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                {
                                  inputpos = inputpos.+(1);
                                  while$81()
                                }
                              else
                                ()
                            };
                            while$80(){
                              if (inputpos.<(inputsize).&&(fresh$macro$1071.<(fresh$macro$1070)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.falseValue).charAt(fresh$macro$1071))))
                                {
                                  {
                                    fresh$macro$1071 = fresh$macro$1071.+(1);
                                    inputpos = inputpos.+(1)
                                  };
                                  while$80()
                                }
                              else
                                ()
                            };
                            if (fresh$macro$1071.==(fresh$macro$1070))
                              {
                                success = true;
                                fresh$macro$1073 = JSonImpl2.this.falseValue
                              }
                            else
                              {
                                success = false;
                                ();
                                inputpos = fresh$macro$1072
                              }
                          }
                        };
                        if (success)
                          fresh$macro$1074 = JSBool.apply(false)
                        else
                          ()
                      };
                      if (success)
                        fresh$macro$988 = fresh$macro$1074
                      else
                        ()
                    }
                  else
                    fresh$macro$988 = fresh$macro$990
                }
              }
            else
              ()
          };
          fastparsers.framework.parseresult.ParseResult.apply[JSValue, String](success, error, if (success)
            fresh$macro$988
          else
            null, inputpos)
        }
      }
    }
  };
  <synthetic> def value$default$2: Int = 0;
  def obj(input: Array[Char], fresh$macro$1075: Int = 0): fastparsers.framework.parseresult.ParseResult[JSValue,String] = {
    var error: String = " ";
    {
      var inputpos: Int = fresh$macro$1075;
      val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
      {
        val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
        {
          var success: Boolean = false;
          var fresh$macro$1079: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = immutable.this.Nil;
          var fresh$macro$1085: Array[Char] = null;
          var fresh$macro$1089: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1096: JSValue = null;
          var fresh$macro$1098: JSValue = null;
          var fresh$macro$1100: JSValue = null;
          var fresh$macro$1102: JSValue = null;
          var fresh$macro$1104: JSValue = null;
          var fresh$macro$1106: JSValue = null;
          var fresh$macro$1109: JSValue = null;
          var fresh$macro$1113: List[JSValue] = immutable.this.Nil;
          var fresh$macro$1119: Array[Char] = null;
          var fresh$macro$1122: JSValue = null;
          var fresh$macro$1127: JSArray = null;
          var fresh$macro$1128: JSValue = null;
          var fresh$macro$1132: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1133: JSString = null;
          var fresh$macro$1137: fastparsers.input.InputWindow.CharArrayStruct = null;
          var fresh$macro$1139: JSDouble = null;
          var fresh$macro$1144: Array[Char] = null;
          var fresh$macro$1145: JSNull.type = null;
          var fresh$macro$1150: Array[Char] = null;
          var fresh$macro$1151: JSBool = null;
          var fresh$macro$1156: Array[Char] = null;
          var fresh$macro$1157: JSBool = null;
          var fresh$macro$1158: JSValue = null;
          var fresh$macro$1159: (fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue) = null;
          var fresh$macro$1164: JSObject = null;
          {
            val fresh$macro$1076: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] => JSObject = ((x: List[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]) => JSObject.apply(x));
            {
              {
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                  {
                    ();
                    inputpos = inputpos.+(1);
                    success = true
                  }
                else
                  {
                    success = false;
                    ()
                  };
                if (success)
                  {
                    var fresh$macro$1077: Boolean = true;
                    val fresh$macro$1078: scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)] = new scala.collection.mutable.ListBuffer[(fastparsers.input.InputWindow.InputWindow[Array[Char]], JSValue)]();
                    while$106(){
                      if (fresh$macro$1077)
                        {
                          {
                            val fresh$macro$1086: Int = inputpos;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$1088: Int = inputpos;
                                    {
                                      while$85(){
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$85()
                                          }
                                        else
                                          ()
                                      };
                                      val fresh$macro$1087: Int = inputpos;
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$84(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                              {
                                                {
                                                  if (input.apply(inputpos).==('\\'))
                                                    inputpos = inputpos.+(1)
                                                  else
                                                    ();
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$84()
                                              }
                                            else
                                              ()
                                          };
                                          if (inputpos.<(inputsize))
                                            {
                                              success = true;
                                              inputpos = inputpos.+(1);
                                              fresh$macro$1089 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1087, inputpos)
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$1088
                                            }
                                        }
                                      else
                                        {
                                          success = false;
                                          ();
                                          inputpos = fresh$macro$1088
                                        }
                                    }
                                  };
                                  if (success)
                                    {
                                      {
                                        val fresh$macro$1093: Int = inputpos;
                                        {
                                          var fresh$macro$1092: Int = 0;
                                          val fresh$macro$1091: Int = JSonImpl2.this.points.length;
                                          while$87(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$87()
                                              }
                                            else
                                              ()
                                          };
                                          while$86(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$1092.<(fresh$macro$1091)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.points).charAt(fresh$macro$1092))))
                                              {
                                                {
                                                  fresh$macro$1092 = fresh$macro$1092.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$86()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$1092.==(fresh$macro$1091))
                                            {
                                              success = true;
                                              ()
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$1093
                                            }
                                        }
                                      };
                                      if (success)
                                        {
                                          {
                                            {
                                              val fresh$macro$1094: Int = inputpos;
                                              while$88(){
                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                  {
                                                    inputpos = inputpos.+(1);
                                                    while$88()
                                                  }
                                                else
                                                  ()
                                              };
                                              ();
                                              success = true
                                            };
                                            if (success)
                                              {
                                                val fresh$macro$1097: Int = inputpos;
                                                {
                                                  {
                                                    val fresh$macro$1099: Int = inputpos;
                                                    {
                                                      {
                                                        val fresh$macro$1101: Int = inputpos;
                                                        {
                                                          {
                                                            val fresh$macro$1103: Int = inputpos;
                                                            {
                                                              {
                                                                val fresh$macro$1105: Int = inputpos;
                                                                {
                                                                  {
                                                                    val fresh$macro$1107: Int = inputpos;
                                                                    {
                                                                      {
                                                                        val fresh$macro$1108: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.obj(input, inputpos);
                                                                        success = fresh$macro$1108.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$1108.inputPos;
                                                                            fresh$macro$1109 = fresh$macro$1108.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$1108.error
                                                                      };
                                                                      if (success.unary_!)
                                                                        {
                                                                          inputpos = fresh$macro$1107;
                                                                          {
                                                                            {
                                                                              val fresh$macro$1110: List[JSValue] => JSArray = ((x: List[JSValue]) => JSArray.apply(x));
                                                                              {
                                                                                {
                                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                                                    {
                                                                                      ();
                                                                                      inputpos = inputpos.+(1);
                                                                                      success = true
                                                                                    }
                                                                                  else
                                                                                    {
                                                                                      success = false;
                                                                                      ()
                                                                                    };
                                                                                  if (success)
                                                                                    {
                                                                                      var fresh$macro$1111: Boolean = true;
                                                                                      val fresh$macro$1112: scala.collection.mutable.ListBuffer[JSValue] = new scala.collection.mutable.ListBuffer[JSValue]();
                                                                                      while$91(){
                                                                                        if (fresh$macro$1111)
                                                                                          {
                                                                                            {
                                                                                              val fresh$macro$1120: Int = inputpos;
                                                                                              {
                                                                                                {
                                                                                                  val fresh$macro$1121: fastparsers.framework.parseresult.ParseResult[JSValue,String] = fresh$macro$1165.this.value(input, inputpos);
                                                                                                  success = fresh$macro$1121.success;
                                                                                                  if (success)
                                                                                                    {
                                                                                                      inputpos = fresh$macro$1121.inputPos;
                                                                                                      fresh$macro$1122 = fresh$macro$1121.result
                                                                                                    }
                                                                                                  else
                                                                                                    error = fresh$macro$1121.error
                                                                                                };
                                                                                                if (success)
                                                                                                  {
                                                                                                    fresh$macro$1112.append(fresh$macro$1122);
                                                                                                    {
                                                                                                      val fresh$macro$1114: Int = inputpos;
                                                                                                      {
                                                                                                        {
                                                                                                          val fresh$macro$1118: Int = inputpos;
                                                                                                          {
                                                                                                            var fresh$macro$1117: Int = 0;
                                                                                                            val fresh$macro$1116: Int = JSonImpl2.this.comma.length;
                                                                                                            while$90(){
                                                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                                {
                                                                                                                  inputpos = inputpos.+(1);
                                                                                                                  while$90()
                                                                                                                }
                                                                                                              else
                                                                                                                ()
                                                                                                            };
                                                                                                            while$89(){
                                                                                                              if (inputpos.<(inputsize).&&(fresh$macro$1117.<(fresh$macro$1116)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$1117))))
                                                                                                                {
                                                                                                                  {
                                                                                                                    fresh$macro$1117 = fresh$macro$1117.+(1);
                                                                                                                    inputpos = inputpos.+(1)
                                                                                                                  };
                                                                                                                  while$89()
                                                                                                                }
                                                                                                              else
                                                                                                                ()
                                                                                                            };
                                                                                                            if (fresh$macro$1117.==(fresh$macro$1116))
                                                                                                              {
                                                                                                                success = true;
                                                                                                                fresh$macro$1119 = JSonImpl2.this.comma
                                                                                                              }
                                                                                                            else
                                                                                                              {
                                                                                                                success = false;
                                                                                                                ();
                                                                                                                inputpos = fresh$macro$1118
                                                                                                              }
                                                                                                          }
                                                                                                        };
                                                                                                        if (success.unary_!)
                                                                                                          {
                                                                                                            fresh$macro$1111 = false;
                                                                                                            inputpos = fresh$macro$1114
                                                                                                          }
                                                                                                        else
                                                                                                          ()
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                else
                                                                                                  {
                                                                                                    fresh$macro$1111 = false;
                                                                                                    inputpos = fresh$macro$1120
                                                                                                  }
                                                                                              }
                                                                                            };
                                                                                            while$91()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      {
                                                                                        fresh$macro$1113 = fresh$macro$1112.toList;
                                                                                        success = true
                                                                                      }
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                };
                                                                                if (success)
                                                                                  {
                                                                                    val fresh$macro$1126: Int = inputpos;
                                                                                    {
                                                                                      var fresh$macro$1125: Int = 0;
                                                                                      val fresh$macro$1124: Int = JSonImpl2.this.closeSBracket.length;
                                                                                      while$93(){
                                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                          {
                                                                                            inputpos = inputpos.+(1);
                                                                                            while$93()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      while$92(){
                                                                                        if (inputpos.<(inputsize).&&(fresh$macro$1125.<(fresh$macro$1124)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeSBracket).charAt(fresh$macro$1125))))
                                                                                          {
                                                                                            {
                                                                                              fresh$macro$1125 = fresh$macro$1125.+(1);
                                                                                              inputpos = inputpos.+(1)
                                                                                            };
                                                                                            while$92()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      if (fresh$macro$1125.==(fresh$macro$1124))
                                                                                        {
                                                                                          success = true;
                                                                                          ()
                                                                                        }
                                                                                      else
                                                                                        {
                                                                                          success = false;
                                                                                          ();
                                                                                          inputpos = fresh$macro$1126
                                                                                        }
                                                                                    }
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              };
                                                                              if (success)
                                                                                fresh$macro$1127 = fresh$macro$1110.apply(fresh$macro$1113)
                                                                              else
                                                                                ()
                                                                            };
                                                                            fresh$macro$1128 = fresh$macro$1127
                                                                          };
                                                                          if (success)
                                                                            fresh$macro$1106 = fresh$macro$1128
                                                                          else
                                                                            ()
                                                                        }
                                                                      else
                                                                        fresh$macro$1106 = fresh$macro$1109
                                                                    }
                                                                  };
                                                                  if (success.unary_!)
                                                                    {
                                                                      inputpos = fresh$macro$1105;
                                                                      {
                                                                        val fresh$macro$1129: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSString = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSString.apply(x));
                                                                        {
                                                                          val fresh$macro$1131: Int = inputpos;
                                                                          {
                                                                            while$95(){
                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                {
                                                                                  inputpos = inputpos.+(1);
                                                                                  while$95()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            val fresh$macro$1130: Int = inputpos;
                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                              {
                                                                                inputpos = inputpos.+(1);
                                                                                while$94(){
                                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                                    {
                                                                                      {
                                                                                        if (input.apply(inputpos).==('\\'))
                                                                                          inputpos = inputpos.+(1)
                                                                                        else
                                                                                          ();
                                                                                        inputpos = inputpos.+(1)
                                                                                      };
                                                                                      while$94()
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                };
                                                                                if (inputpos.<(inputsize))
                                                                                  {
                                                                                    success = true;
                                                                                    inputpos = inputpos.+(1);
                                                                                    fresh$macro$1132 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1130, inputpos)
                                                                                  }
                                                                                else
                                                                                  {
                                                                                    success = false;
                                                                                    ();
                                                                                    inputpos = fresh$macro$1131
                                                                                  }
                                                                              }
                                                                            else
                                                                              {
                                                                                success = false;
                                                                                ();
                                                                                inputpos = fresh$macro$1131
                                                                              }
                                                                          }
                                                                        };
                                                                        if (success)
                                                                          fresh$macro$1133 = fresh$macro$1129.apply(fresh$macro$1132)
                                                                        else
                                                                          ()
                                                                      };
                                                                      if (success)
                                                                        fresh$macro$1104 = fresh$macro$1133
                                                                      else
                                                                        ()
                                                                    }
                                                                  else
                                                                    fresh$macro$1104 = fresh$macro$1106
                                                                }
                                                              };
                                                              if (success.unary_!)
                                                                {
                                                                  inputpos = fresh$macro$1103;
                                                                  {
                                                                    val fresh$macro$1134: fastparsers.input.InputWindow.InputWindow[Array[Char]] => JSDouble = ((x: fastparsers.input.InputWindow.InputWindow[Array[Char]]) => JSDouble.apply(x));
                                                                    {
                                                                      val fresh$macro$1138: Int = inputpos;
                                                                      {
                                                                        while$99(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$99()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        var fresh$macro$1135: Boolean = false;
                                                                        val fresh$macro$1136: Int = inputpos;
                                                                        success = false;
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                                          inputpos = inputpos.+(1)
                                                                        else
                                                                          ();
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            while$96(){
                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                {
                                                                                  inputpos = inputpos.+(1);
                                                                                  while$96()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                              {
                                                                                inputpos = inputpos.+(1);
                                                                                while$98(){
                                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                    {
                                                                                      inputpos = inputpos.+(1);
                                                                                      while$98()
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                }
                                                                              }
                                                                            else
                                                                              ();
                                                                            success = true;
                                                                            fresh$macro$1137 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1136, inputpos)
                                                                          }
                                                                        else
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                {
                                                                                  inputpos = inputpos.+(1);
                                                                                  while$97(){
                                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                      {
                                                                                        inputpos = inputpos.+(1);
                                                                                        while$97()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  success = true;
                                                                                  fresh$macro$1137 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$1136, inputpos)
                                                                                }
                                                                              else
                                                                                ()
                                                                            }
                                                                          else
                                                                            ()
                                                                      }
                                                                    };
                                                                    if (success)
                                                                      fresh$macro$1139 = fresh$macro$1134.apply(fresh$macro$1137)
                                                                    else
                                                                      ()
                                                                  };
                                                                  if (success)
                                                                    fresh$macro$1102 = fresh$macro$1139
                                                                  else
                                                                    ()
                                                                }
                                                              else
                                                                fresh$macro$1102 = fresh$macro$1104
                                                            }
                                                          };
                                                          if (success.unary_!)
                                                            {
                                                              inputpos = fresh$macro$1101;
                                                              {
                                                                {
                                                                  val fresh$macro$1143: Int = inputpos;
                                                                  {
                                                                    var fresh$macro$1142: Int = 0;
                                                                    val fresh$macro$1141: Int = JSonImpl2.this.nullValue.length;
                                                                    while$101(){
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                        {
                                                                          inputpos = inputpos.+(1);
                                                                          while$101()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    while$100(){
                                                                      if (inputpos.<(inputsize).&&(fresh$macro$1142.<(fresh$macro$1141)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.nullValue).charAt(fresh$macro$1142))))
                                                                        {
                                                                          {
                                                                            fresh$macro$1142 = fresh$macro$1142.+(1);
                                                                            inputpos = inputpos.+(1)
                                                                          };
                                                                          while$100()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    if (fresh$macro$1142.==(fresh$macro$1141))
                                                                      {
                                                                        success = true;
                                                                        fresh$macro$1144 = JSonImpl2.this.nullValue
                                                                      }
                                                                    else
                                                                      {
                                                                        success = false;
                                                                        ();
                                                                        inputpos = fresh$macro$1143
                                                                      }
                                                                  }
                                                                };
                                                                if (success)
                                                                  fresh$macro$1145 = JSNull
                                                                else
                                                                  ()
                                                              };
                                                              if (success)
                                                                fresh$macro$1100 = fresh$macro$1145
                                                              else
                                                                ()
                                                            }
                                                          else
                                                            fresh$macro$1100 = fresh$macro$1102
                                                        }
                                                      };
                                                      if (success.unary_!)
                                                        {
                                                          inputpos = fresh$macro$1099;
                                                          {
                                                            {
                                                              val fresh$macro$1149: Int = inputpos;
                                                              {
                                                                var fresh$macro$1148: Int = 0;
                                                                val fresh$macro$1147: Int = JSonImpl2.this.trueValue.length;
                                                                while$103(){
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$103()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                while$102(){
                                                                  if (inputpos.<(inputsize).&&(fresh$macro$1148.<(fresh$macro$1147)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.trueValue).charAt(fresh$macro$1148))))
                                                                    {
                                                                      {
                                                                        fresh$macro$1148 = fresh$macro$1148.+(1);
                                                                        inputpos = inputpos.+(1)
                                                                      };
                                                                      while$102()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (fresh$macro$1148.==(fresh$macro$1147))
                                                                  {
                                                                    success = true;
                                                                    fresh$macro$1150 = JSonImpl2.this.trueValue
                                                                  }
                                                                else
                                                                  {
                                                                    success = false;
                                                                    ();
                                                                    inputpos = fresh$macro$1149
                                                                  }
                                                              }
                                                            };
                                                            if (success)
                                                              fresh$macro$1151 = JSBool.apply(true)
                                                            else
                                                              ()
                                                          };
                                                          if (success)
                                                            fresh$macro$1098 = fresh$macro$1151
                                                          else
                                                            ()
                                                        }
                                                      else
                                                        fresh$macro$1098 = fresh$macro$1100
                                                    }
                                                  };
                                                  if (success.unary_!)
                                                    {
                                                      inputpos = fresh$macro$1097;
                                                      {
                                                        {
                                                          val fresh$macro$1155: Int = inputpos;
                                                          {
                                                            var fresh$macro$1154: Int = 0;
                                                            val fresh$macro$1153: Int = JSonImpl2.this.falseValue.length;
                                                            while$105(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$105()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            while$104(){
                                                              if (inputpos.<(inputsize).&&(fresh$macro$1154.<(fresh$macro$1153)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.falseValue).charAt(fresh$macro$1154))))
                                                                {
                                                                  {
                                                                    fresh$macro$1154 = fresh$macro$1154.+(1);
                                                                    inputpos = inputpos.+(1)
                                                                  };
                                                                  while$104()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (fresh$macro$1154.==(fresh$macro$1153))
                                                              {
                                                                success = true;
                                                                fresh$macro$1156 = JSonImpl2.this.falseValue
                                                              }
                                                            else
                                                              {
                                                                success = false;
                                                                ();
                                                                inputpos = fresh$macro$1155
                                                              }
                                                          }
                                                        };
                                                        if (success)
                                                          fresh$macro$1157 = JSBool.apply(false)
                                                        else
                                                          ()
                                                      };
                                                      if (success)
                                                        fresh$macro$1096 = fresh$macro$1157
                                                      else
                                                        ()
                                                    }
                                                  else
                                                    fresh$macro$1096 = fresh$macro$1098
                                                }
                                              }
                                            else
                                              ()
                                          };
                                          fresh$macro$1158 = fresh$macro$1096
                                        }
                                      else
                                        ()
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$1159 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, JSValue](fresh$macro$1089, fresh$macro$1158)
                              };
                              if (success)
                                {
                                  fresh$macro$1078.append(fresh$macro$1159);
                                  {
                                    val fresh$macro$1080: Int = inputpos;
                                    {
                                      {
                                        val fresh$macro$1084: Int = inputpos;
                                        {
                                          var fresh$macro$1083: Int = 0;
                                          val fresh$macro$1082: Int = JSonImpl2.this.comma.length;
                                          while$83(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$83()
                                              }
                                            else
                                              ()
                                          };
                                          while$82(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$1083.<(fresh$macro$1082)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.comma).charAt(fresh$macro$1083))))
                                              {
                                                {
                                                  fresh$macro$1083 = fresh$macro$1083.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$82()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$1083.==(fresh$macro$1082))
                                            {
                                              success = true;
                                              fresh$macro$1085 = JSonImpl2.this.comma
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$1084
                                            }
                                        }
                                      };
                                      if (success.unary_!)
                                        {
                                          fresh$macro$1077 = false;
                                          inputpos = fresh$macro$1080
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$1077 = false;
                                  inputpos = fresh$macro$1086
                                }
                            }
                          };
                          while$106()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$1079 = fresh$macro$1078.toList;
                      success = true
                    }
                  }
                else
                  ()
              };
              if (success)
                {
                  val fresh$macro$1163: Int = inputpos;
                  {
                    var fresh$macro$1162: Int = 0;
                    val fresh$macro$1161: Int = JSonImpl2.this.closeBracket.length;
                    while$108(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                        {
                          inputpos = inputpos.+(1);
                          while$108()
                        }
                      else
                        ()
                    };
                    while$107(){
                      if (inputpos.<(inputsize).&&(fresh$macro$1162.<(fresh$macro$1161)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(JSonImpl2.this.closeBracket).charAt(fresh$macro$1162))))
                        {
                          {
                            fresh$macro$1162 = fresh$macro$1162.+(1);
                            inputpos = inputpos.+(1)
                          };
                          while$107()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$1162.==(fresh$macro$1161))
                      {
                        success = true;
                        ()
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$1163
                      }
                  }
                }
              else
                ()
            };
            if (success)
              fresh$macro$1164 = fresh$macro$1076.apply(fresh$macro$1079)
            else
              ()
          };
          fastparsers.framework.parseresult.ParseResult.apply[JSValue, String](success, error, if (success)
            fresh$macro$1164
          else
            null, inputpos)
        }
      }
    }
  };
  <synthetic> def obj$default$2: Int = 0
};
val fresh$macro$1166: Int = 0;
new fresh$macro$1165()
[0m
   val jsonparser = getAST.get(FastParsersCharArray  {
                              ^
e error found
xamples/compile:mcompile) Compilation failed
tal time: 13 s, completed May 12, 2014 6:41:53 PM
