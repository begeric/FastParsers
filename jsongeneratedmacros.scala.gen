{
  class fresh$macro$349 extends AnyRef with fastparsers.framework.ruleprocessing.FinalFastParserImpl {
    def <init>(): fresh$macro$349 = {
      fresh$macro$349.super.<init>();
      ()
    };
    import scala.collection.mutable.ListBuffer;
    import scala.reflect.runtime.`package`.universe._;
    def member: fastparsers.parsers.Parser[Any] = scala.this.Predef.???;
    def arr: fastparsers.parsers.Parser[Any] = scala.this.Predef.???;
    def value: fastparsers.parsers.Parser[Any] = scala.this.Predef.???;
    def obj: fastparsers.parsers.Parser[Any] = scala.this.Predef.???;
    def member(input: Array[Char], fresh$macro$1: Int = 0): fastparsers.framework.parseresult.ParseResult[Any,String] = {
      var error: String = " ";
      {
        var inputpos: Int = fresh$macro$1;
        val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
        {
          val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
          {
            var success: Boolean = false;
            var fresh$macro$5: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$10: Array[Char] = null;
            var fresh$macro$13: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$14: Any = null;
            var fresh$macro$16: Any = null;
            var fresh$macro$18: Any = null;
            var fresh$macro$20: Any = null;
            var fresh$macro$22: Any = null;
            var fresh$macro$24: Any = null;
            var fresh$macro$26: Char = ' ';
            var fresh$macro$29: List[Any] = immutable.this.Nil;
            var fresh$macro$35: Array[Char] = null;
            var fresh$macro$38: Any = null;
            var fresh$macro$43: Array[Char] = null;
            var fresh$macro$44: Any = null;
            var fresh$macro$45: Char = ' ';
            var fresh$macro$48: List[Any] = immutable.this.Nil;
            var fresh$macro$54: Array[Char] = null;
            var fresh$macro$57: Any = null;
            var fresh$macro$62: Array[Char] = null;
            var fresh$macro$63: Any = null;
            var fresh$macro$67: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$70: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$76: Array[Char] = null;
            var fresh$macro$81: Array[Char] = null;
            var fresh$macro$86: Array[Char] = null;
            var fresh$macro$87: Any = null;
            {
              {
                val fresh$macro$4: Int = inputpos;
                {
                  while$2(){
                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                      {
                        inputpos = inputpos.+(1);
                        while$2()
                      }
                    else
                      ()
                  };
                  val fresh$macro$2: Int = inputpos;
                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                    {
                      inputpos = inputpos.+(1);
                      while$1(){
                        if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                          {
                            {
                              if (input.apply(inputpos).==('\\'))
                                inputpos = inputpos.+(1)
                              else
                                ();
                              inputpos = inputpos.+(1)
                            };
                            while$1()
                          }
                        else
                          ()
                      };
                      if (inputpos.<(inputsize))
                        {
                          success = true;
                          inputpos = inputpos.+(1);
                          fresh$macro$5 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$2, inputpos)
                        }
                      else
                        {
                          success = false;
                          ();
                          inputpos = fresh$macro$4
                        }
                    }
                  else
                    {
                      success = false;
                      ();
                      inputpos = fresh$macro$4
                    }
                }
              };
              if (success)
                {
                  {
                    val fresh$macro$9: Int = inputpos;
                    {
                      var fresh$macro$8: Int = 0;
                      val fresh$macro$7: Int = ":".toCharArray().length;
                      while$4(){
                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                          {
                            inputpos = inputpos.+(1);
                            while$4()
                          }
                        else
                          ()
                      };
                      while$3(){
                        if (inputpos.<(inputsize).&&(fresh$macro$8.<(fresh$macro$7)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(":".toCharArray()).charAt(fresh$macro$8))))
                          {
                            {
                              fresh$macro$8 = fresh$macro$8.+(1);
                              inputpos = inputpos.+(1)
                            };
                            while$3()
                          }
                        else
                          ()
                      };
                      if (fresh$macro$8.==(fresh$macro$7))
                        {
                          success = true;
                          fresh$macro$10 = ":".toCharArray()
                        }
                      else
                        {
                          success = false;
                          ();
                          inputpos = fresh$macro$9
                        }
                    }
                  };
                  if (success)
                    {
                      {
                        {
                          val fresh$macro$11: Int = inputpos;
                          while$5(){
                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                              {
                                inputpos = inputpos.+(1);
                                while$5()
                              }
                            else
                              ()
                          };
                          fresh$macro$13 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$11, inputpos);
                          success = true
                        };
                        if (success)
                          {
                            val fresh$macro$15: Int = inputpos;
                            {
                              {
                                val fresh$macro$17: Int = inputpos;
                                {
                                  {
                                    val fresh$macro$19: Int = inputpos;
                                    {
                                      {
                                        val fresh$macro$21: Int = inputpos;
                                        {
                                          {
                                            val fresh$macro$23: Int = inputpos;
                                            {
                                              {
                                                val fresh$macro$25: Int = inputpos;
                                                {
                                                  {
                                                    {
                                                      {
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                          {
                                                            fresh$macro$26 = '{';
                                                            inputpos = inputpos.+(1);
                                                            success = true
                                                          }
                                                        else
                                                          {
                                                            success = false;
                                                            ()
                                                          };
                                                        if (success)
                                                          {
                                                            var fresh$macro$27: Boolean = true;
                                                            val fresh$macro$28: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                            while$8(){
                                                              if (fresh$macro$27)
                                                                {
                                                                  {
                                                                    val fresh$macro$36: Int = inputpos;
                                                                    {
                                                                      {
                                                                        val fresh$macro$37: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.member(input, inputpos);
                                                                        success = fresh$macro$37.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$37.inputPos;
                                                                            fresh$macro$38 = fresh$macro$37.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$37.error
                                                                      };
                                                                      if (success)
                                                                        {
                                                                          fresh$macro$28.append(fresh$macro$38);
                                                                          {
                                                                            val fresh$macro$30: Int = inputpos;
                                                                            {
                                                                              {
                                                                                val fresh$macro$34: Int = inputpos;
                                                                                {
                                                                                  var fresh$macro$33: Int = 0;
                                                                                  val fresh$macro$32: Int = ",".toCharArray().length;
                                                                                  while$7(){
                                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                      {
                                                                                        inputpos = inputpos.+(1);
                                                                                        while$7()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  while$6(){
                                                                                    if (inputpos.<(inputsize).&&(fresh$macro$33.<(fresh$macro$32)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$33))))
                                                                                      {
                                                                                        {
                                                                                          fresh$macro$33 = fresh$macro$33.+(1);
                                                                                          inputpos = inputpos.+(1)
                                                                                        };
                                                                                        while$6()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  if (fresh$macro$33.==(fresh$macro$32))
                                                                                    {
                                                                                      success = true;
                                                                                      fresh$macro$35 = ",".toCharArray()
                                                                                    }
                                                                                  else
                                                                                    {
                                                                                      success = false;
                                                                                      ();
                                                                                      inputpos = fresh$macro$34
                                                                                    }
                                                                                }
                                                                              };
                                                                              if (success.unary_!)
                                                                                {
                                                                                  fresh$macro$27 = false;
                                                                                  inputpos = fresh$macro$30
                                                                                }
                                                                              else
                                                                                ()
                                                                            }
                                                                          }
                                                                        }
                                                                      else
                                                                        {
                                                                          fresh$macro$27 = false;
                                                                          inputpos = fresh$macro$36
                                                                        }
                                                                    }
                                                                  };
                                                                  while$8()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            {
                                                              fresh$macro$29 = fresh$macro$28.toList;
                                                              success = true
                                                            }
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (success)
                                                        {
                                                          val fresh$macro$42: Int = inputpos;
                                                          {
                                                            var fresh$macro$41: Int = 0;
                                                            val fresh$macro$40: Int = "}".toCharArray().length;
                                                            while$10(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$10()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            while$9(){
                                                              if (inputpos.<(inputsize).&&(fresh$macro$41.<(fresh$macro$40)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("}".toCharArray()).charAt(fresh$macro$41))))
                                                                {
                                                                  {
                                                                    fresh$macro$41 = fresh$macro$41.+(1);
                                                                    inputpos = inputpos.+(1)
                                                                  };
                                                                  while$9()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (fresh$macro$41.==(fresh$macro$40))
                                                              {
                                                                success = true;
                                                                fresh$macro$43 = "}".toCharArray()
                                                              }
                                                            else
                                                              {
                                                                success = false;
                                                                ();
                                                                inputpos = fresh$macro$42
                                                              }
                                                          }
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    fresh$macro$44 = fresh$macro$29
                                                  };
                                                  if (success.unary_!)
                                                    {
                                                      inputpos = fresh$macro$25;
                                                      {
                                                        {
                                                          {
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                              {
                                                                fresh$macro$45 = '[';
                                                                inputpos = inputpos.+(1);
                                                                success = true
                                                              }
                                                            else
                                                              {
                                                                success = false;
                                                                ()
                                                              };
                                                            if (success)
                                                              {
                                                                var fresh$macro$46: Boolean = true;
                                                                val fresh$macro$47: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                                while$13(){
                                                                  if (fresh$macro$46)
                                                                    {
                                                                      {
                                                                        val fresh$macro$55: Int = inputpos;
                                                                        {
                                                                          {
                                                                            val fresh$macro$56: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.value(input, inputpos);
                                                                            success = fresh$macro$56.success;
                                                                            if (success)
                                                                              {
                                                                                inputpos = fresh$macro$56.inputPos;
                                                                                fresh$macro$57 = fresh$macro$56.result
                                                                              }
                                                                            else
                                                                              error = fresh$macro$56.error
                                                                          };
                                                                          if (success)
                                                                            {
                                                                              fresh$macro$47.append(fresh$macro$57);
                                                                              {
                                                                                val fresh$macro$49: Int = inputpos;
                                                                                {
                                                                                  {
                                                                                    val fresh$macro$53: Int = inputpos;
                                                                                    {
                                                                                      var fresh$macro$52: Int = 0;
                                                                                      val fresh$macro$51: Int = ",".toCharArray().length;
                                                                                      while$12(){
                                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                          {
                                                                                            inputpos = inputpos.+(1);
                                                                                            while$12()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      while$11(){
                                                                                        if (inputpos.<(inputsize).&&(fresh$macro$52.<(fresh$macro$51)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$52))))
                                                                                          {
                                                                                            {
                                                                                              fresh$macro$52 = fresh$macro$52.+(1);
                                                                                              inputpos = inputpos.+(1)
                                                                                            };
                                                                                            while$11()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      if (fresh$macro$52.==(fresh$macro$51))
                                                                                        {
                                                                                          success = true;
                                                                                          fresh$macro$54 = ",".toCharArray()
                                                                                        }
                                                                                      else
                                                                                        {
                                                                                          success = false;
                                                                                          ();
                                                                                          inputpos = fresh$macro$53
                                                                                        }
                                                                                    }
                                                                                  };
                                                                                  if (success.unary_!)
                                                                                    {
                                                                                      fresh$macro$46 = false;
                                                                                      inputpos = fresh$macro$49
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                }
                                                                              }
                                                                            }
                                                                          else
                                                                            {
                                                                              fresh$macro$46 = false;
                                                                              inputpos = fresh$macro$55
                                                                            }
                                                                        }
                                                                      };
                                                                      while$13()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                {
                                                                  fresh$macro$48 = fresh$macro$47.toList;
                                                                  success = true
                                                                }
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (success)
                                                            {
                                                              val fresh$macro$61: Int = inputpos;
                                                              {
                                                                var fresh$macro$60: Int = 0;
                                                                val fresh$macro$59: Int = "]".toCharArray().length;
                                                                while$15(){
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$15()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                while$14(){
                                                                  if (inputpos.<(inputsize).&&(fresh$macro$60.<(fresh$macro$59)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("]".toCharArray()).charAt(fresh$macro$60))))
                                                                    {
                                                                      {
                                                                        fresh$macro$60 = fresh$macro$60.+(1);
                                                                        inputpos = inputpos.+(1)
                                                                      };
                                                                      while$14()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (fresh$macro$60.==(fresh$macro$59))
                                                                  {
                                                                    success = true;
                                                                    fresh$macro$62 = "]".toCharArray()
                                                                  }
                                                                else
                                                                  {
                                                                    success = false;
                                                                    ();
                                                                    inputpos = fresh$macro$61
                                                                  }
                                                              }
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        fresh$macro$63 = fresh$macro$48
                                                      };
                                                      if (success)
                                                        fresh$macro$24 = fresh$macro$63
                                                      else
                                                        ()
                                                    }
                                                  else
                                                    fresh$macro$24 = fresh$macro$44
                                                }
                                              };
                                              if (success.unary_!)
                                                {
                                                  inputpos = fresh$macro$23;
                                                  {
                                                    val fresh$macro$66: Int = inputpos;
                                                    {
                                                      while$17(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$17()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      val fresh$macro$64: Int = inputpos;
                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                        {
                                                          inputpos = inputpos.+(1);
                                                          while$16(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                              {
                                                                {
                                                                  if (input.apply(inputpos).==('\\'))
                                                                    inputpos = inputpos.+(1)
                                                                  else
                                                                    ();
                                                                  inputpos = inputpos.+(1)
                                                                };
                                                                while$16()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (inputpos.<(inputsize))
                                                            {
                                                              success = true;
                                                              inputpos = inputpos.+(1);
                                                              fresh$macro$67 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$64, inputpos)
                                                            }
                                                          else
                                                            {
                                                              success = false;
                                                              ();
                                                              inputpos = fresh$macro$66
                                                            }
                                                        }
                                                      else
                                                        {
                                                          success = false;
                                                          ();
                                                          inputpos = fresh$macro$66
                                                        }
                                                    }
                                                  };
                                                  if (success)
                                                    fresh$macro$22 = fresh$macro$67
                                                  else
                                                    ()
                                                }
                                              else
                                                fresh$macro$22 = fresh$macro$24
                                            }
                                          };
                                          if (success.unary_!)
                                            {
                                              inputpos = fresh$macro$21;
                                              {
                                                val fresh$macro$71: Int = inputpos;
                                                {
                                                  while$21(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$21()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  var fresh$macro$68: Boolean = false;
                                                  val fresh$macro$69: Int = inputpos;
                                                  success = false;
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                    inputpos = inputpos.+(1)
                                                  else
                                                    ();
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                    {
                                                      inputpos = inputpos.+(1);
                                                      while$19(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$19()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                        {
                                                          inputpos = inputpos.+(1);
                                                          while$18(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                              {
                                                                inputpos = inputpos.+(1);
                                                                while$18()
                                                              }
                                                            else
                                                              ()
                                                          }
                                                        }
                                                      else
                                                        ();
                                                      success = true;
                                                      fresh$macro$70 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$69, inputpos)
                                                    }
                                                  else
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$20(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$20()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            success = true;
                                                            fresh$macro$70 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$69, inputpos)
                                                          }
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      ()
                                                }
                                              };
                                              if (success)
                                                fresh$macro$20 = fresh$macro$70
                                              else
                                                ()
                                            }
                                          else
                                            fresh$macro$20 = fresh$macro$22
                                        }
                                      };
                                      if (success.unary_!)
                                        {
                                          inputpos = fresh$macro$19;
                                          {
                                            val fresh$macro$75: Int = inputpos;
                                            {
                                              var fresh$macro$74: Int = 0;
                                              val fresh$macro$73: Int = "null".toCharArray().length;
                                              while$23(){
                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                  {
                                                    inputpos = inputpos.+(1);
                                                    while$23()
                                                  }
                                                else
                                                  ()
                                              };
                                              while$22(){
                                                if (inputpos.<(inputsize).&&(fresh$macro$74.<(fresh$macro$73)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("null".toCharArray()).charAt(fresh$macro$74))))
                                                  {
                                                    {
                                                      fresh$macro$74 = fresh$macro$74.+(1);
                                                      inputpos = inputpos.+(1)
                                                    };
                                                    while$22()
                                                  }
                                                else
                                                  ()
                                              };
                                              if (fresh$macro$74.==(fresh$macro$73))
                                                {
                                                  success = true;
                                                  fresh$macro$76 = "null".toCharArray()
                                                }
                                              else
                                                {
                                                  success = false;
                                                  ();
                                                  inputpos = fresh$macro$75
                                                }
                                            }
                                          };
                                          if (success)
                                            fresh$macro$18 = fresh$macro$76
                                          else
                                            ()
                                        }
                                      else
                                        fresh$macro$18 = fresh$macro$20
                                    }
                                  };
                                  if (success.unary_!)
                                    {
                                      inputpos = fresh$macro$17;
                                      {
                                        val fresh$macro$80: Int = inputpos;
                                        {
                                          var fresh$macro$79: Int = 0;
                                          val fresh$macro$78: Int = "true".toCharArray().length;
                                          while$25(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$25()
                                              }
                                            else
                                              ()
                                          };
                                          while$24(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$79.<(fresh$macro$78)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("true".toCharArray()).charAt(fresh$macro$79))))
                                              {
                                                {
                                                  fresh$macro$79 = fresh$macro$79.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$24()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$79.==(fresh$macro$78))
                                            {
                                              success = true;
                                              fresh$macro$81 = "true".toCharArray()
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$80
                                            }
                                        }
                                      };
                                      if (success)
                                        fresh$macro$16 = fresh$macro$81
                                      else
                                        ()
                                    }
                                  else
                                    fresh$macro$16 = fresh$macro$18
                                }
                              };
                              if (success.unary_!)
                                {
                                  inputpos = fresh$macro$15;
                                  {
                                    val fresh$macro$85: Int = inputpos;
                                    {
                                      var fresh$macro$84: Int = 0;
                                      val fresh$macro$83: Int = "false".toCharArray().length;
                                      while$27(){
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$27()
                                          }
                                        else
                                          ()
                                      };
                                      while$26(){
                                        if (inputpos.<(inputsize).&&(fresh$macro$84.<(fresh$macro$83)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("false".toCharArray()).charAt(fresh$macro$84))))
                                          {
                                            {
                                              fresh$macro$84 = fresh$macro$84.+(1);
                                              inputpos = inputpos.+(1)
                                            };
                                            while$26()
                                          }
                                        else
                                          ()
                                      };
                                      if (fresh$macro$84.==(fresh$macro$83))
                                        {
                                          success = true;
                                          fresh$macro$86 = "false".toCharArray()
                                        }
                                      else
                                        {
                                          success = false;
                                          ();
                                          inputpos = fresh$macro$85
                                        }
                                    }
                                  };
                                  if (success)
                                    fresh$macro$14 = fresh$macro$86
                                  else
                                    ()
                                }
                              else
                                fresh$macro$14 = fresh$macro$16
                            }
                          }
                        else
                          ()
                      };
                      fresh$macro$87 = fresh$macro$14
                    }
                  else
                    ()
                }
              else
                ()
            };
            fastparsers.framework.parseresult.ParseResult.apply[Any, String](success, error, if (success)
              scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, Any](fresh$macro$5, fresh$macro$87)
            else
              null, inputpos)
          }
        }
      }
    };
    <synthetic> def member$default$2: Int = 0;
    def arr(input: Array[Char], fresh$macro$88: Int = 0): fastparsers.framework.parseresult.ParseResult[Any,String] = {
      var error: String = " ";
      {
        var inputpos: Int = fresh$macro$88;
        val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
        {
          val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
          {
            var success: Boolean = false;
            var fresh$macro$89: Char = ' ';
            var fresh$macro$92: List[Any] = immutable.this.Nil;
            var fresh$macro$98: Array[Char] = null;
            var fresh$macro$102: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$103: Any = null;
            var fresh$macro$105: Any = null;
            var fresh$macro$107: Any = null;
            var fresh$macro$109: Any = null;
            var fresh$macro$111: Any = null;
            var fresh$macro$113: Any = null;
            var fresh$macro$115: Char = ' ';
            var fresh$macro$118: List[Any] = immutable.this.Nil;
            var fresh$macro$124: Array[Char] = null;
            var fresh$macro$129: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$134: Array[Char] = null;
            var fresh$macro$136: Any = null;
            var fresh$macro$137: Any = null;
            var fresh$macro$142: Array[Char] = null;
            var fresh$macro$143: Any = null;
            var fresh$macro$145: Any = null;
            var fresh$macro$149: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$152: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$158: Array[Char] = null;
            var fresh$macro$163: Array[Char] = null;
            var fresh$macro$168: Array[Char] = null;
            var fresh$macro$169: Any = null;
            var fresh$macro$174: Array[Char] = null;
            {
              {
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                  {
                    fresh$macro$89 = '[';
                    inputpos = inputpos.+(1);
                    success = true
                  }
                else
                  {
                    success = false;
                    ()
                  };
                if (success)
                  {
                    var fresh$macro$90: Boolean = true;
                    val fresh$macro$91: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                    while$52(){
                      if (fresh$macro$90)
                        {
                          {
                            val fresh$macro$99: Int = inputpos;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$100: Int = inputpos;
                                    while$30(){
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$30()
                                        }
                                      else
                                        ()
                                    };
                                    fresh$macro$102 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$100, inputpos);
                                    success = true
                                  };
                                  if (success)
                                    {
                                      val fresh$macro$104: Int = inputpos;
                                      {
                                        {
                                          val fresh$macro$106: Int = inputpos;
                                          {
                                            {
                                              val fresh$macro$108: Int = inputpos;
                                              {
                                                {
                                                  val fresh$macro$110: Int = inputpos;
                                                  {
                                                    {
                                                      val fresh$macro$112: Int = inputpos;
                                                      {
                                                        {
                                                          val fresh$macro$114: Int = inputpos;
                                                          {
                                                            {
                                                              {
                                                                {
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                                    {
                                                                      fresh$macro$115 = '{';
                                                                      inputpos = inputpos.+(1);
                                                                      success = true
                                                                    }
                                                                  else
                                                                    {
                                                                      success = false;
                                                                      ()
                                                                    };
                                                                  if (success)
                                                                    {
                                                                      var fresh$macro$116: Boolean = true;
                                                                      val fresh$macro$117: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                                      while$37(){
                                                                        if (fresh$macro$116)
                                                                          {
                                                                            {
                                                                              val fresh$macro$125: Int = inputpos;
                                                                              {
                                                                                {
                                                                                  {
                                                                                    {
                                                                                      val fresh$macro$128: Int = inputpos;
                                                                                      {
                                                                                        while$34(){
                                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                            {
                                                                                              inputpos = inputpos.+(1);
                                                                                              while$34()
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        };
                                                                                        val fresh$macro$126: Int = inputpos;
                                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                                          {
                                                                                            inputpos = inputpos.+(1);
                                                                                            while$33(){
                                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                                                {
                                                                                                  {
                                                                                                    if (input.apply(inputpos).==('\\'))
                                                                                                      inputpos = inputpos.+(1)
                                                                                                    else
                                                                                                      ();
                                                                                                    inputpos = inputpos.+(1)
                                                                                                  };
                                                                                                  while$33()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            if (inputpos.<(inputsize))
                                                                                              {
                                                                                                success = true;
                                                                                                inputpos = inputpos.+(1);
                                                                                                fresh$macro$129 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$126, inputpos)
                                                                                              }
                                                                                            else
                                                                                              {
                                                                                                success = false;
                                                                                                ();
                                                                                                inputpos = fresh$macro$128
                                                                                              }
                                                                                          }
                                                                                        else
                                                                                          {
                                                                                            success = false;
                                                                                            ();
                                                                                            inputpos = fresh$macro$128
                                                                                          }
                                                                                      }
                                                                                    };
                                                                                    if (success)
                                                                                      {
                                                                                        {
                                                                                          val fresh$macro$133: Int = inputpos;
                                                                                          {
                                                                                            var fresh$macro$132: Int = 0;
                                                                                            val fresh$macro$131: Int = ":".toCharArray().length;
                                                                                            while$36(){
                                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                {
                                                                                                  inputpos = inputpos.+(1);
                                                                                                  while$36()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            while$35(){
                                                                                              if (inputpos.<(inputsize).&&(fresh$macro$132.<(fresh$macro$131)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(":".toCharArray()).charAt(fresh$macro$132))))
                                                                                                {
                                                                                                  {
                                                                                                    fresh$macro$132 = fresh$macro$132.+(1);
                                                                                                    inputpos = inputpos.+(1)
                                                                                                  };
                                                                                                  while$35()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            if (fresh$macro$132.==(fresh$macro$131))
                                                                                              {
                                                                                                success = true;
                                                                                                fresh$macro$134 = ":".toCharArray()
                                                                                              }
                                                                                            else
                                                                                              {
                                                                                                success = false;
                                                                                                ();
                                                                                                inputpos = fresh$macro$133
                                                                                              }
                                                                                          }
                                                                                        };
                                                                                        if (success)
                                                                                          {
                                                                                            val fresh$macro$135: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.value(input, inputpos);
                                                                                            success = fresh$macro$135.success;
                                                                                            if (success)
                                                                                              {
                                                                                                inputpos = fresh$macro$135.inputPos;
                                                                                                fresh$macro$136 = fresh$macro$135.result
                                                                                              }
                                                                                            else
                                                                                              error = fresh$macro$135.error
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  fresh$macro$137 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, Any](fresh$macro$129, fresh$macro$136)
                                                                                };
                                                                                if (success)
                                                                                  {
                                                                                    fresh$macro$117.append(fresh$macro$137);
                                                                                    {
                                                                                      val fresh$macro$119: Int = inputpos;
                                                                                      {
                                                                                        {
                                                                                          val fresh$macro$123: Int = inputpos;
                                                                                          {
                                                                                            var fresh$macro$122: Int = 0;
                                                                                            val fresh$macro$121: Int = ",".toCharArray().length;
                                                                                            while$32(){
                                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                {
                                                                                                  inputpos = inputpos.+(1);
                                                                                                  while$32()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            while$31(){
                                                                                              if (inputpos.<(inputsize).&&(fresh$macro$122.<(fresh$macro$121)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$122))))
                                                                                                {
                                                                                                  {
                                                                                                    fresh$macro$122 = fresh$macro$122.+(1);
                                                                                                    inputpos = inputpos.+(1)
                                                                                                  };
                                                                                                  while$31()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            if (fresh$macro$122.==(fresh$macro$121))
                                                                                              {
                                                                                                success = true;
                                                                                                fresh$macro$124 = ",".toCharArray()
                                                                                              }
                                                                                            else
                                                                                              {
                                                                                                success = false;
                                                                                                ();
                                                                                                inputpos = fresh$macro$123
                                                                                              }
                                                                                          }
                                                                                        };
                                                                                        if (success.unary_!)
                                                                                          {
                                                                                            fresh$macro$116 = false;
                                                                                            inputpos = fresh$macro$119
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                else
                                                                                  {
                                                                                    fresh$macro$116 = false;
                                                                                    inputpos = fresh$macro$125
                                                                                  }
                                                                              }
                                                                            };
                                                                            while$37()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      {
                                                                        fresh$macro$118 = fresh$macro$117.toList;
                                                                        success = true
                                                                      }
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (success)
                                                                  {
                                                                    val fresh$macro$141: Int = inputpos;
                                                                    {
                                                                      var fresh$macro$140: Int = 0;
                                                                      val fresh$macro$139: Int = "}".toCharArray().length;
                                                                      while$39(){
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            while$39()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      while$38(){
                                                                        if (inputpos.<(inputsize).&&(fresh$macro$140.<(fresh$macro$139)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("}".toCharArray()).charAt(fresh$macro$140))))
                                                                          {
                                                                            {
                                                                              fresh$macro$140 = fresh$macro$140.+(1);
                                                                              inputpos = inputpos.+(1)
                                                                            };
                                                                            while$38()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      if (fresh$macro$140.==(fresh$macro$139))
                                                                        {
                                                                          success = true;
                                                                          fresh$macro$142 = "}".toCharArray()
                                                                        }
                                                                      else
                                                                        {
                                                                          success = false;
                                                                          ();
                                                                          inputpos = fresh$macro$141
                                                                        }
                                                                    }
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$143 = fresh$macro$118
                                                            };
                                                            if (success.unary_!)
                                                              {
                                                                inputpos = fresh$macro$114;
                                                                {
                                                                  val fresh$macro$144: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.arr(input, inputpos);
                                                                  success = fresh$macro$144.success;
                                                                  if (success)
                                                                    {
                                                                      inputpos = fresh$macro$144.inputPos;
                                                                      fresh$macro$145 = fresh$macro$144.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$144.error
                                                                };
                                                                if (success)
                                                                  fresh$macro$113 = fresh$macro$145
                                                                else
                                                                  ()
                                                              }
                                                            else
                                                              fresh$macro$113 = fresh$macro$143
                                                          }
                                                        };
                                                        if (success.unary_!)
                                                          {
                                                            inputpos = fresh$macro$112;
                                                            {
                                                              val fresh$macro$148: Int = inputpos;
                                                              {
                                                                while$41(){
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$41()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                val fresh$macro$146: Int = inputpos;
                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                  {
                                                                    inputpos = inputpos.+(1);
                                                                    while$40(){
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                        {
                                                                          {
                                                                            if (input.apply(inputpos).==('\\'))
                                                                              inputpos = inputpos.+(1)
                                                                            else
                                                                              ();
                                                                            inputpos = inputpos.+(1)
                                                                          };
                                                                          while$40()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    if (inputpos.<(inputsize))
                                                                      {
                                                                        success = true;
                                                                        inputpos = inputpos.+(1);
                                                                        fresh$macro$149 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$146, inputpos)
                                                                      }
                                                                    else
                                                                      {
                                                                        success = false;
                                                                        ();
                                                                        inputpos = fresh$macro$148
                                                                      }
                                                                  }
                                                                else
                                                                  {
                                                                    success = false;
                                                                    ();
                                                                    inputpos = fresh$macro$148
                                                                  }
                                                              }
                                                            };
                                                            if (success)
                                                              fresh$macro$111 = fresh$macro$149
                                                            else
                                                              ()
                                                          }
                                                        else
                                                          fresh$macro$111 = fresh$macro$113
                                                      }
                                                    };
                                                    if (success.unary_!)
                                                      {
                                                        inputpos = fresh$macro$110;
                                                        {
                                                          val fresh$macro$153: Int = inputpos;
                                                          {
                                                            while$45(){
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  while$45()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            var fresh$macro$150: Boolean = false;
                                                            val fresh$macro$151: Int = inputpos;
                                                            success = false;
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                              inputpos = inputpos.+(1)
                                                            else
                                                              ();
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                              {
                                                                inputpos = inputpos.+(1);
                                                                while$43(){
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$43()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                  {
                                                                    inputpos = inputpos.+(1);
                                                                    while$42(){
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                        {
                                                                          inputpos = inputpos.+(1);
                                                                          while$42()
                                                                        }
                                                                      else
                                                                        ()
                                                                    }
                                                                  }
                                                                else
                                                                  ();
                                                                success = true;
                                                                fresh$macro$152 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$151, inputpos)
                                                              }
                                                            else
                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                {
                                                                  inputpos = inputpos.+(1);
                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                    {
                                                                      inputpos = inputpos.+(1);
                                                                      while$44(){
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            while$44()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      success = true;
                                                                      fresh$macro$152 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$151, inputpos)
                                                                    }
                                                                  else
                                                                    ()
                                                                }
                                                              else
                                                                ()
                                                          }
                                                        };
                                                        if (success)
                                                          fresh$macro$109 = fresh$macro$152
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      fresh$macro$109 = fresh$macro$111
                                                  }
                                                };
                                                if (success.unary_!)
                                                  {
                                                    inputpos = fresh$macro$108;
                                                    {
                                                      val fresh$macro$157: Int = inputpos;
                                                      {
                                                        var fresh$macro$156: Int = 0;
                                                        val fresh$macro$155: Int = "null".toCharArray().length;
                                                        while$47(){
                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                            {
                                                              inputpos = inputpos.+(1);
                                                              while$47()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        while$46(){
                                                          if (inputpos.<(inputsize).&&(fresh$macro$156.<(fresh$macro$155)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("null".toCharArray()).charAt(fresh$macro$156))))
                                                            {
                                                              {
                                                                fresh$macro$156 = fresh$macro$156.+(1);
                                                                inputpos = inputpos.+(1)
                                                              };
                                                              while$46()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        if (fresh$macro$156.==(fresh$macro$155))
                                                          {
                                                            success = true;
                                                            fresh$macro$158 = "null".toCharArray()
                                                          }
                                                        else
                                                          {
                                                            success = false;
                                                            ();
                                                            inputpos = fresh$macro$157
                                                          }
                                                      }
                                                    };
                                                    if (success)
                                                      fresh$macro$107 = fresh$macro$158
                                                    else
                                                      ()
                                                  }
                                                else
                                                  fresh$macro$107 = fresh$macro$109
                                              }
                                            };
                                            if (success.unary_!)
                                              {
                                                inputpos = fresh$macro$106;
                                                {
                                                  val fresh$macro$162: Int = inputpos;
                                                  {
                                                    var fresh$macro$161: Int = 0;
                                                    val fresh$macro$160: Int = "true".toCharArray().length;
                                                    while$49(){
                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                        {
                                                          inputpos = inputpos.+(1);
                                                          while$49()
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    while$48(){
                                                      if (inputpos.<(inputsize).&&(fresh$macro$161.<(fresh$macro$160)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("true".toCharArray()).charAt(fresh$macro$161))))
                                                        {
                                                          {
                                                            fresh$macro$161 = fresh$macro$161.+(1);
                                                            inputpos = inputpos.+(1)
                                                          };
                                                          while$48()
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    if (fresh$macro$161.==(fresh$macro$160))
                                                      {
                                                        success = true;
                                                        fresh$macro$163 = "true".toCharArray()
                                                      }
                                                    else
                                                      {
                                                        success = false;
                                                        ();
                                                        inputpos = fresh$macro$162
                                                      }
                                                  }
                                                };
                                                if (success)
                                                  fresh$macro$105 = fresh$macro$163
                                                else
                                                  ()
                                              }
                                            else
                                              fresh$macro$105 = fresh$macro$107
                                          }
                                        };
                                        if (success.unary_!)
                                          {
                                            inputpos = fresh$macro$104;
                                            {
                                              val fresh$macro$167: Int = inputpos;
                                              {
                                                var fresh$macro$166: Int = 0;
                                                val fresh$macro$165: Int = "false".toCharArray().length;
                                                while$51(){
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                    {
                                                      inputpos = inputpos.+(1);
                                                      while$51()
                                                    }
                                                  else
                                                    ()
                                                };
                                                while$50(){
                                                  if (inputpos.<(inputsize).&&(fresh$macro$166.<(fresh$macro$165)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("false".toCharArray()).charAt(fresh$macro$166))))
                                                    {
                                                      {
                                                        fresh$macro$166 = fresh$macro$166.+(1);
                                                        inputpos = inputpos.+(1)
                                                      };
                                                      while$50()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (fresh$macro$166.==(fresh$macro$165))
                                                  {
                                                    success = true;
                                                    fresh$macro$168 = "false".toCharArray()
                                                  }
                                                else
                                                  {
                                                    success = false;
                                                    ();
                                                    inputpos = fresh$macro$167
                                                  }
                                              }
                                            };
                                            if (success)
                                              fresh$macro$103 = fresh$macro$168
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$103 = fresh$macro$105
                                      }
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$169 = fresh$macro$103
                              };
                              if (success)
                                {
                                  fresh$macro$91.append(fresh$macro$169);
                                  {
                                    val fresh$macro$93: Int = inputpos;
                                    {
                                      {
                                        val fresh$macro$97: Int = inputpos;
                                        {
                                          var fresh$macro$96: Int = 0;
                                          val fresh$macro$95: Int = ",".toCharArray().length;
                                          while$29(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$29()
                                              }
                                            else
                                              ()
                                          };
                                          while$28(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$96.<(fresh$macro$95)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$96))))
                                              {
                                                {
                                                  fresh$macro$96 = fresh$macro$96.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$28()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$96.==(fresh$macro$95))
                                            {
                                              success = true;
                                              fresh$macro$98 = ",".toCharArray()
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$97
                                            }
                                        }
                                      };
                                      if (success.unary_!)
                                        {
                                          fresh$macro$90 = false;
                                          inputpos = fresh$macro$93
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$90 = false;
                                  inputpos = fresh$macro$99
                                }
                            }
                          };
                          while$52()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$92 = fresh$macro$91.toList;
                      success = true
                    }
                  }
                else
                  ()
              };
              if (success)
                {
                  val fresh$macro$173: Int = inputpos;
                  {
                    var fresh$macro$172: Int = 0;
                    val fresh$macro$171: Int = "]".toCharArray().length;
                    while$54(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                        {
                          inputpos = inputpos.+(1);
                          while$54()
                        }
                      else
                        ()
                    };
                    while$53(){
                      if (inputpos.<(inputsize).&&(fresh$macro$172.<(fresh$macro$171)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("]".toCharArray()).charAt(fresh$macro$172))))
                        {
                          {
                            fresh$macro$172 = fresh$macro$172.+(1);
                            inputpos = inputpos.+(1)
                          };
                          while$53()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$172.==(fresh$macro$171))
                      {
                        success = true;
                        fresh$macro$174 = "]".toCharArray()
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$173
                      }
                  }
                }
              else
                ()
            };
            fastparsers.framework.parseresult.ParseResult.apply[Any, String](success, error, if (success)
              fresh$macro$92
            else
              null, inputpos)
          }
        }
      }
    };
    <synthetic> def arr$default$2: Int = 0;
    def value(input: Array[Char], fresh$macro$175: Int = 0): fastparsers.framework.parseresult.ParseResult[Any,String] = {
      var error: String = " ";
      {
        var inputpos: Int = fresh$macro$175;
        val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
        {
          val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
          {
            var success: Boolean = false;
            var fresh$macro$178: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$179: Any = null;
            var fresh$macro$181: Any = null;
            var fresh$macro$183: Any = null;
            var fresh$macro$185: Any = null;
            var fresh$macro$187: Any = null;
            var fresh$macro$189: Any = null;
            var fresh$macro$191: Char = ' ';
            var fresh$macro$194: List[Any] = immutable.this.Nil;
            var fresh$macro$200: Array[Char] = null;
            var fresh$macro$205: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$210: Array[Char] = null;
            var fresh$macro$212: Any = null;
            var fresh$macro$213: Any = null;
            var fresh$macro$218: Array[Char] = null;
            var fresh$macro$219: Any = null;
            var fresh$macro$220: Char = ' ';
            var fresh$macro$223: List[Any] = immutable.this.Nil;
            var fresh$macro$229: Array[Char] = null;
            var fresh$macro$232: Any = null;
            var fresh$macro$237: Array[Char] = null;
            var fresh$macro$238: Any = null;
            var fresh$macro$242: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$245: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$251: Array[Char] = null;
            var fresh$macro$256: Array[Char] = null;
            var fresh$macro$261: Array[Char] = null;
            {
              {
                val fresh$macro$176: Int = inputpos;
                while$55(){
                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                    {
                      inputpos = inputpos.+(1);
                      while$55()
                    }
                  else
                    ()
                };
                fresh$macro$178 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$176, inputpos);
                success = true
              };
              if (success)
                {
                  val fresh$macro$180: Int = inputpos;
                  {
                    {
                      val fresh$macro$182: Int = inputpos;
                      {
                        {
                          val fresh$macro$184: Int = inputpos;
                          {
                            {
                              val fresh$macro$186: Int = inputpos;
                              {
                                {
                                  val fresh$macro$188: Int = inputpos;
                                  {
                                    {
                                      val fresh$macro$190: Int = inputpos;
                                      {
                                        {
                                          {
                                            {
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                                                {
                                                  fresh$macro$191 = '{';
                                                  inputpos = inputpos.+(1);
                                                  success = true
                                                }
                                              else
                                                {
                                                  success = false;
                                                  ()
                                                };
                                              if (success)
                                                {
                                                  var fresh$macro$192: Boolean = true;
                                                  val fresh$macro$193: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                  while$62(){
                                                    if (fresh$macro$192)
                                                      {
                                                        {
                                                          val fresh$macro$201: Int = inputpos;
                                                          {
                                                            {
                                                              {
                                                                {
                                                                  val fresh$macro$204: Int = inputpos;
                                                                  {
                                                                    while$59(){
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                        {
                                                                          inputpos = inputpos.+(1);
                                                                          while$59()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    val fresh$macro$202: Int = inputpos;
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$58(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                            {
                                                                              {
                                                                                if (input.apply(inputpos).==('\\'))
                                                                                  inputpos = inputpos.+(1)
                                                                                else
                                                                                  ();
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$58()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (inputpos.<(inputsize))
                                                                          {
                                                                            success = true;
                                                                            inputpos = inputpos.+(1);
                                                                            fresh$macro$205 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$202, inputpos)
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$204
                                                                          }
                                                                      }
                                                                    else
                                                                      {
                                                                        success = false;
                                                                        ();
                                                                        inputpos = fresh$macro$204
                                                                      }
                                                                  }
                                                                };
                                                                if (success)
                                                                  {
                                                                    {
                                                                      val fresh$macro$209: Int = inputpos;
                                                                      {
                                                                        var fresh$macro$208: Int = 0;
                                                                        val fresh$macro$207: Int = ":".toCharArray().length;
                                                                        while$61(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$61()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$60(){
                                                                          if (inputpos.<(inputsize).&&(fresh$macro$208.<(fresh$macro$207)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(":".toCharArray()).charAt(fresh$macro$208))))
                                                                            {
                                                                              {
                                                                                fresh$macro$208 = fresh$macro$208.+(1);
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$60()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$208.==(fresh$macro$207))
                                                                          {
                                                                            success = true;
                                                                            fresh$macro$210 = ":".toCharArray()
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$209
                                                                          }
                                                                      }
                                                                    };
                                                                    if (success)
                                                                      {
                                                                        val fresh$macro$211: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.value(input, inputpos);
                                                                        success = fresh$macro$211.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$211.inputPos;
                                                                            fresh$macro$212 = fresh$macro$211.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$211.error
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$213 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, Any](fresh$macro$205, fresh$macro$212)
                                                            };
                                                            if (success)
                                                              {
                                                                fresh$macro$193.append(fresh$macro$213);
                                                                {
                                                                  val fresh$macro$195: Int = inputpos;
                                                                  {
                                                                    {
                                                                      val fresh$macro$199: Int = inputpos;
                                                                      {
                                                                        var fresh$macro$198: Int = 0;
                                                                        val fresh$macro$197: Int = ",".toCharArray().length;
                                                                        while$57(){
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$57()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$56(){
                                                                          if (inputpos.<(inputsize).&&(fresh$macro$198.<(fresh$macro$197)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$198))))
                                                                            {
                                                                              {
                                                                                fresh$macro$198 = fresh$macro$198.+(1);
                                                                                inputpos = inputpos.+(1)
                                                                              };
                                                                              while$56()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$198.==(fresh$macro$197))
                                                                          {
                                                                            success = true;
                                                                            fresh$macro$200 = ",".toCharArray()
                                                                          }
                                                                        else
                                                                          {
                                                                            success = false;
                                                                            ();
                                                                            inputpos = fresh$macro$199
                                                                          }
                                                                      }
                                                                    };
                                                                    if (success.unary_!)
                                                                      {
                                                                        fresh$macro$192 = false;
                                                                        inputpos = fresh$macro$195
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                }
                                                              }
                                                            else
                                                              {
                                                                fresh$macro$192 = false;
                                                                inputpos = fresh$macro$201
                                                              }
                                                          }
                                                        };
                                                        while$62()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  {
                                                    fresh$macro$194 = fresh$macro$193.toList;
                                                    success = true
                                                  }
                                                }
                                              else
                                                ()
                                            };
                                            if (success)
                                              {
                                                val fresh$macro$217: Int = inputpos;
                                                {
                                                  var fresh$macro$216: Int = 0;
                                                  val fresh$macro$215: Int = "}".toCharArray().length;
                                                  while$64(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$64()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  while$63(){
                                                    if (inputpos.<(inputsize).&&(fresh$macro$216.<(fresh$macro$215)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("}".toCharArray()).charAt(fresh$macro$216))))
                                                      {
                                                        {
                                                          fresh$macro$216 = fresh$macro$216.+(1);
                                                          inputpos = inputpos.+(1)
                                                        };
                                                        while$63()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  if (fresh$macro$216.==(fresh$macro$215))
                                                    {
                                                      success = true;
                                                      fresh$macro$218 = "}".toCharArray()
                                                    }
                                                  else
                                                    {
                                                      success = false;
                                                      ();
                                                      inputpos = fresh$macro$217
                                                    }
                                                }
                                              }
                                            else
                                              ()
                                          };
                                          fresh$macro$219 = fresh$macro$194
                                        };
                                        if (success.unary_!)
                                          {
                                            inputpos = fresh$macro$190;
                                            {
                                              {
                                                {
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                    {
                                                      fresh$macro$220 = '[';
                                                      inputpos = inputpos.+(1);
                                                      success = true
                                                    }
                                                  else
                                                    {
                                                      success = false;
                                                      ()
                                                    };
                                                  if (success)
                                                    {
                                                      var fresh$macro$221: Boolean = true;
                                                      val fresh$macro$222: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                      while$67(){
                                                        if (fresh$macro$221)
                                                          {
                                                            {
                                                              val fresh$macro$230: Int = inputpos;
                                                              {
                                                                {
                                                                  val fresh$macro$231: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.value(input, inputpos);
                                                                  success = fresh$macro$231.success;
                                                                  if (success)
                                                                    {
                                                                      inputpos = fresh$macro$231.inputPos;
                                                                      fresh$macro$232 = fresh$macro$231.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$231.error
                                                                };
                                                                if (success)
                                                                  {
                                                                    fresh$macro$222.append(fresh$macro$232);
                                                                    {
                                                                      val fresh$macro$224: Int = inputpos;
                                                                      {
                                                                        {
                                                                          val fresh$macro$228: Int = inputpos;
                                                                          {
                                                                            var fresh$macro$227: Int = 0;
                                                                            val fresh$macro$226: Int = ",".toCharArray().length;
                                                                            while$66(){
                                                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                {
                                                                                  inputpos = inputpos.+(1);
                                                                                  while$66()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            while$65(){
                                                                              if (inputpos.<(inputsize).&&(fresh$macro$227.<(fresh$macro$226)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$227))))
                                                                                {
                                                                                  {
                                                                                    fresh$macro$227 = fresh$macro$227.+(1);
                                                                                    inputpos = inputpos.+(1)
                                                                                  };
                                                                                  while$65()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            if (fresh$macro$227.==(fresh$macro$226))
                                                                              {
                                                                                success = true;
                                                                                fresh$macro$229 = ",".toCharArray()
                                                                              }
                                                                            else
                                                                              {
                                                                                success = false;
                                                                                ();
                                                                                inputpos = fresh$macro$228
                                                                              }
                                                                          }
                                                                        };
                                                                        if (success.unary_!)
                                                                          {
                                                                            fresh$macro$221 = false;
                                                                            inputpos = fresh$macro$224
                                                                          }
                                                                        else
                                                                          ()
                                                                      }
                                                                    }
                                                                  }
                                                                else
                                                                  {
                                                                    fresh$macro$221 = false;
                                                                    inputpos = fresh$macro$230
                                                                  }
                                                              }
                                                            };
                                                            while$67()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      {
                                                        fresh$macro$223 = fresh$macro$222.toList;
                                                        success = true
                                                      }
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (success)
                                                  {
                                                    val fresh$macro$236: Int = inputpos;
                                                    {
                                                      var fresh$macro$235: Int = 0;
                                                      val fresh$macro$234: Int = "]".toCharArray().length;
                                                      while$69(){
                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                          {
                                                            inputpos = inputpos.+(1);
                                                            while$69()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      while$68(){
                                                        if (inputpos.<(inputsize).&&(fresh$macro$235.<(fresh$macro$234)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("]".toCharArray()).charAt(fresh$macro$235))))
                                                          {
                                                            {
                                                              fresh$macro$235 = fresh$macro$235.+(1);
                                                              inputpos = inputpos.+(1)
                                                            };
                                                            while$68()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (fresh$macro$235.==(fresh$macro$234))
                                                        {
                                                          success = true;
                                                          fresh$macro$237 = "]".toCharArray()
                                                        }
                                                      else
                                                        {
                                                          success = false;
                                                          ();
                                                          inputpos = fresh$macro$236
                                                        }
                                                    }
                                                  }
                                                else
                                                  ()
                                              };
                                              fresh$macro$238 = fresh$macro$223
                                            };
                                            if (success)
                                              fresh$macro$189 = fresh$macro$238
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$189 = fresh$macro$219
                                      }
                                    };
                                    if (success.unary_!)
                                      {
                                        inputpos = fresh$macro$188;
                                        {
                                          val fresh$macro$241: Int = inputpos;
                                          {
                                            while$71(){
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$71()
                                                }
                                              else
                                                ()
                                            };
                                            val fresh$macro$239: Int = inputpos;
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$70(){
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                    {
                                                      {
                                                        if (input.apply(inputpos).==('\\'))
                                                          inputpos = inputpos.+(1)
                                                        else
                                                          ();
                                                        inputpos = inputpos.+(1)
                                                      };
                                                      while$70()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (inputpos.<(inputsize))
                                                  {
                                                    success = true;
                                                    inputpos = inputpos.+(1);
                                                    fresh$macro$242 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$239, inputpos)
                                                  }
                                                else
                                                  {
                                                    success = false;
                                                    ();
                                                    inputpos = fresh$macro$241
                                                  }
                                              }
                                            else
                                              {
                                                success = false;
                                                ();
                                                inputpos = fresh$macro$241
                                              }
                                          }
                                        };
                                        if (success)
                                          fresh$macro$187 = fresh$macro$242
                                        else
                                          ()
                                      }
                                    else
                                      fresh$macro$187 = fresh$macro$189
                                  }
                                };
                                if (success.unary_!)
                                  {
                                    inputpos = fresh$macro$186;
                                    {
                                      val fresh$macro$246: Int = inputpos;
                                      {
                                        while$75(){
                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                            {
                                              inputpos = inputpos.+(1);
                                              while$75()
                                            }
                                          else
                                            ()
                                        };
                                        var fresh$macro$243: Boolean = false;
                                        val fresh$macro$244: Int = inputpos;
                                        success = false;
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                          inputpos = inputpos.+(1)
                                        else
                                          ();
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$73(){
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$73()
                                                }
                                              else
                                                ()
                                            };
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$72(){
                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                    {
                                                      inputpos = inputpos.+(1);
                                                      while$72()
                                                    }
                                                  else
                                                    ()
                                                }
                                              }
                                            else
                                              ();
                                            success = true;
                                            fresh$macro$245 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$244, inputpos)
                                          }
                                        else
                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                            {
                                              inputpos = inputpos.+(1);
                                              if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                {
                                                  inputpos = inputpos.+(1);
                                                  while$74(){
                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                      {
                                                        inputpos = inputpos.+(1);
                                                        while$74()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  success = true;
                                                  fresh$macro$245 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$244, inputpos)
                                                }
                                              else
                                                ()
                                            }
                                          else
                                            ()
                                      }
                                    };
                                    if (success)
                                      fresh$macro$185 = fresh$macro$245
                                    else
                                      ()
                                  }
                                else
                                  fresh$macro$185 = fresh$macro$187
                              }
                            };
                            if (success.unary_!)
                              {
                                inputpos = fresh$macro$184;
                                {
                                  val fresh$macro$250: Int = inputpos;
                                  {
                                    var fresh$macro$249: Int = 0;
                                    val fresh$macro$248: Int = "null".toCharArray().length;
                                    while$77(){
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$77()
                                        }
                                      else
                                        ()
                                    };
                                    while$76(){
                                      if (inputpos.<(inputsize).&&(fresh$macro$249.<(fresh$macro$248)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("null".toCharArray()).charAt(fresh$macro$249))))
                                        {
                                          {
                                            fresh$macro$249 = fresh$macro$249.+(1);
                                            inputpos = inputpos.+(1)
                                          };
                                          while$76()
                                        }
                                      else
                                        ()
                                    };
                                    if (fresh$macro$249.==(fresh$macro$248))
                                      {
                                        success = true;
                                        fresh$macro$251 = "null".toCharArray()
                                      }
                                    else
                                      {
                                        success = false;
                                        ();
                                        inputpos = fresh$macro$250
                                      }
                                  }
                                };
                                if (success)
                                  fresh$macro$183 = fresh$macro$251
                                else
                                  ()
                              }
                            else
                              fresh$macro$183 = fresh$macro$185
                          }
                        };
                        if (success.unary_!)
                          {
                            inputpos = fresh$macro$182;
                            {
                              val fresh$macro$255: Int = inputpos;
                              {
                                var fresh$macro$254: Int = 0;
                                val fresh$macro$253: Int = "true".toCharArray().length;
                                while$79(){
                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                    {
                                      inputpos = inputpos.+(1);
                                      while$79()
                                    }
                                  else
                                    ()
                                };
                                while$78(){
                                  if (inputpos.<(inputsize).&&(fresh$macro$254.<(fresh$macro$253)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("true".toCharArray()).charAt(fresh$macro$254))))
                                    {
                                      {
                                        fresh$macro$254 = fresh$macro$254.+(1);
                                        inputpos = inputpos.+(1)
                                      };
                                      while$78()
                                    }
                                  else
                                    ()
                                };
                                if (fresh$macro$254.==(fresh$macro$253))
                                  {
                                    success = true;
                                    fresh$macro$256 = "true".toCharArray()
                                  }
                                else
                                  {
                                    success = false;
                                    ();
                                    inputpos = fresh$macro$255
                                  }
                              }
                            };
                            if (success)
                              fresh$macro$181 = fresh$macro$256
                            else
                              ()
                          }
                        else
                          fresh$macro$181 = fresh$macro$183
                      }
                    };
                    if (success.unary_!)
                      {
                        inputpos = fresh$macro$180;
                        {
                          val fresh$macro$260: Int = inputpos;
                          {
                            var fresh$macro$259: Int = 0;
                            val fresh$macro$258: Int = "false".toCharArray().length;
                            while$81(){
                              if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                {
                                  inputpos = inputpos.+(1);
                                  while$81()
                                }
                              else
                                ()
                            };
                            while$80(){
                              if (inputpos.<(inputsize).&&(fresh$macro$259.<(fresh$macro$258)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("false".toCharArray()).charAt(fresh$macro$259))))
                                {
                                  {
                                    fresh$macro$259 = fresh$macro$259.+(1);
                                    inputpos = inputpos.+(1)
                                  };
                                  while$80()
                                }
                              else
                                ()
                            };
                            if (fresh$macro$259.==(fresh$macro$258))
                              {
                                success = true;
                                fresh$macro$261 = "false".toCharArray()
                              }
                            else
                              {
                                success = false;
                                ();
                                inputpos = fresh$macro$260
                              }
                          }
                        };
                        if (success)
                          fresh$macro$179 = fresh$macro$261
                        else
                          ()
                      }
                    else
                      fresh$macro$179 = fresh$macro$181
                  }
                }
              else
                ()
            };
            fastparsers.framework.parseresult.ParseResult.apply[Any, String](success, error, if (success)
              fresh$macro$179
            else
              null, inputpos)
          }
        }
      }
    };
    <synthetic> def value$default$2: Int = 0;
    def obj(input: Array[Char], fresh$macro$262: Int = 0): fastparsers.framework.parseresult.ParseResult[Any,String] = {
      var error: String = " ";
      {
        var inputpos: Int = fresh$macro$262;
        val inputsize: Int = scala.this.Predef.charArrayOps(input).size;
        {
          val inputpositioned: fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]] = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition[scala.collection.mutable.WrappedArray[Char]](scala.this.Predef.wrapCharArray(input));
          {
            var success: Boolean = false;
            var fresh$macro$263: Char = ' ';
            var fresh$macro$266: List[Any] = immutable.this.Nil;
            var fresh$macro$272: Array[Char] = null;
            var fresh$macro$277: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$282: Array[Char] = null;
            var fresh$macro$285: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$286: Any = null;
            var fresh$macro$288: Any = null;
            var fresh$macro$290: Any = null;
            var fresh$macro$292: Any = null;
            var fresh$macro$294: Any = null;
            var fresh$macro$296: Any = null;
            var fresh$macro$299: Any = null;
            var fresh$macro$300: Char = ' ';
            var fresh$macro$303: List[Any] = immutable.this.Nil;
            var fresh$macro$309: Array[Char] = null;
            var fresh$macro$312: Any = null;
            var fresh$macro$317: Array[Char] = null;
            var fresh$macro$318: Any = null;
            var fresh$macro$322: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$325: fastparsers.input.InputWindow.CharArrayStruct = null;
            var fresh$macro$331: Array[Char] = null;
            var fresh$macro$336: Array[Char] = null;
            var fresh$macro$341: Array[Char] = null;
            var fresh$macro$342: Any = null;
            var fresh$macro$343: Any = null;
            var fresh$macro$348: Array[Char] = null;
            {
              {
                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('{')))
                  {
                    fresh$macro$263 = '{';
                    inputpos = inputpos.+(1);
                    success = true
                  }
                else
                  {
                    success = false;
                    ()
                  };
                if (success)
                  {
                    var fresh$macro$264: Boolean = true;
                    val fresh$macro$265: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                    while$106(){
                      if (fresh$macro$264)
                        {
                          {
                            val fresh$macro$273: Int = inputpos;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$276: Int = inputpos;
                                    {
                                      while$85(){
                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                          {
                                            inputpos = inputpos.+(1);
                                            while$85()
                                          }
                                        else
                                          ()
                                      };
                                      val fresh$macro$274: Int = inputpos;
                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                        {
                                          inputpos = inputpos.+(1);
                                          while$84(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                              {
                                                {
                                                  if (input.apply(inputpos).==('\\'))
                                                    inputpos = inputpos.+(1)
                                                  else
                                                    ();
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$84()
                                              }
                                            else
                                              ()
                                          };
                                          if (inputpos.<(inputsize))
                                            {
                                              success = true;
                                              inputpos = inputpos.+(1);
                                              fresh$macro$277 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$274, inputpos)
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$276
                                            }
                                        }
                                      else
                                        {
                                          success = false;
                                          ();
                                          inputpos = fresh$macro$276
                                        }
                                    }
                                  };
                                  if (success)
                                    {
                                      {
                                        val fresh$macro$281: Int = inputpos;
                                        {
                                          var fresh$macro$280: Int = 0;
                                          val fresh$macro$279: Int = ":".toCharArray().length;
                                          while$87(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$87()
                                              }
                                            else
                                              ()
                                          };
                                          while$86(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$280.<(fresh$macro$279)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(":".toCharArray()).charAt(fresh$macro$280))))
                                              {
                                                {
                                                  fresh$macro$280 = fresh$macro$280.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$86()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$280.==(fresh$macro$279))
                                            {
                                              success = true;
                                              fresh$macro$282 = ":".toCharArray()
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$281
                                            }
                                        }
                                      };
                                      if (success)
                                        {
                                          {
                                            {
                                              val fresh$macro$283: Int = inputpos;
                                              while$88(){
                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                  {
                                                    inputpos = inputpos.+(1);
                                                    while$88()
                                                  }
                                                else
                                                  ()
                                              };
                                              fresh$macro$285 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$283, inputpos);
                                              success = true
                                            };
                                            if (success)
                                              {
                                                val fresh$macro$287: Int = inputpos;
                                                {
                                                  {
                                                    val fresh$macro$289: Int = inputpos;
                                                    {
                                                      {
                                                        val fresh$macro$291: Int = inputpos;
                                                        {
                                                          {
                                                            val fresh$macro$293: Int = inputpos;
                                                            {
                                                              {
                                                                val fresh$macro$295: Int = inputpos;
                                                                {
                                                                  {
                                                                    val fresh$macro$297: Int = inputpos;
                                                                    {
                                                                      {
                                                                        val fresh$macro$298: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.obj(input, inputpos);
                                                                        success = fresh$macro$298.success;
                                                                        if (success)
                                                                          {
                                                                            inputpos = fresh$macro$298.inputPos;
                                                                            fresh$macro$299 = fresh$macro$298.result
                                                                          }
                                                                        else
                                                                          error = fresh$macro$298.error
                                                                      };
                                                                      if (success.unary_!)
                                                                        {
                                                                          inputpos = fresh$macro$297;
                                                                          {
                                                                            {
                                                                              {
                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==('[')))
                                                                                  {
                                                                                    fresh$macro$300 = '[';
                                                                                    inputpos = inputpos.+(1);
                                                                                    success = true
                                                                                  }
                                                                                else
                                                                                  {
                                                                                    success = false;
                                                                                    ()
                                                                                  };
                                                                                if (success)
                                                                                  {
                                                                                    var fresh$macro$301: Boolean = true;
                                                                                    val fresh$macro$302: scala.collection.mutable.ListBuffer[Any] = new scala.collection.mutable.ListBuffer[Any]();
                                                                                    while$91(){
                                                                                      if (fresh$macro$301)
                                                                                        {
                                                                                          {
                                                                                            val fresh$macro$310: Int = inputpos;
                                                                                            {
                                                                                              {
                                                                                                val fresh$macro$311: fastparsers.framework.parseresult.ParseResult[Any,String] = fresh$macro$349.this.value(input, inputpos);
                                                                                                success = fresh$macro$311.success;
                                                                                                if (success)
                                                                                                  {
                                                                                                    inputpos = fresh$macro$311.inputPos;
                                                                                                    fresh$macro$312 = fresh$macro$311.result
                                                                                                  }
                                                                                                else
                                                                                                  error = fresh$macro$311.error
                                                                                              };
                                                                                              if (success)
                                                                                                {
                                                                                                  fresh$macro$302.append(fresh$macro$312);
                                                                                                  {
                                                                                                    val fresh$macro$304: Int = inputpos;
                                                                                                    {
                                                                                                      {
                                                                                                        val fresh$macro$308: Int = inputpos;
                                                                                                        {
                                                                                                          var fresh$macro$307: Int = 0;
                                                                                                          val fresh$macro$306: Int = ",".toCharArray().length;
                                                                                                          while$90(){
                                                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                                              {
                                                                                                                inputpos = inputpos.+(1);
                                                                                                                while$90()
                                                                                                              }
                                                                                                            else
                                                                                                              ()
                                                                                                          };
                                                                                                          while$89(){
                                                                                                            if (inputpos.<(inputsize).&&(fresh$macro$307.<(fresh$macro$306)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$307))))
                                                                                                              {
                                                                                                                {
                                                                                                                  fresh$macro$307 = fresh$macro$307.+(1);
                                                                                                                  inputpos = inputpos.+(1)
                                                                                                                };
                                                                                                                while$89()
                                                                                                              }
                                                                                                            else
                                                                                                              ()
                                                                                                          };
                                                                                                          if (fresh$macro$307.==(fresh$macro$306))
                                                                                                            {
                                                                                                              success = true;
                                                                                                              fresh$macro$309 = ",".toCharArray()
                                                                                                            }
                                                                                                          else
                                                                                                            {
                                                                                                              success = false;
                                                                                                              ();
                                                                                                              inputpos = fresh$macro$308
                                                                                                            }
                                                                                                        }
                                                                                                      };
                                                                                                      if (success.unary_!)
                                                                                                        {
                                                                                                          fresh$macro$301 = false;
                                                                                                          inputpos = fresh$macro$304
                                                                                                        }
                                                                                                      else
                                                                                                        ()
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              else
                                                                                                {
                                                                                                  fresh$macro$301 = false;
                                                                                                  inputpos = fresh$macro$310
                                                                                                }
                                                                                            }
                                                                                          };
                                                                                          while$91()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    {
                                                                                      fresh$macro$303 = fresh$macro$302.toList;
                                                                                      success = true
                                                                                    }
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              };
                                                                              if (success)
                                                                                {
                                                                                  val fresh$macro$316: Int = inputpos;
                                                                                  {
                                                                                    var fresh$macro$315: Int = 0;
                                                                                    val fresh$macro$314: Int = "]".toCharArray().length;
                                                                                    while$93(){
                                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                                        {
                                                                                          inputpos = inputpos.+(1);
                                                                                          while$93()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    while$92(){
                                                                                      if (inputpos.<(inputsize).&&(fresh$macro$315.<(fresh$macro$314)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("]".toCharArray()).charAt(fresh$macro$315))))
                                                                                        {
                                                                                          {
                                                                                            fresh$macro$315 = fresh$macro$315.+(1);
                                                                                            inputpos = inputpos.+(1)
                                                                                          };
                                                                                          while$92()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    if (fresh$macro$315.==(fresh$macro$314))
                                                                                      {
                                                                                        success = true;
                                                                                        fresh$macro$317 = "]".toCharArray()
                                                                                      }
                                                                                    else
                                                                                      {
                                                                                        success = false;
                                                                                        ();
                                                                                        inputpos = fresh$macro$316
                                                                                      }
                                                                                  }
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            fresh$macro$318 = fresh$macro$303
                                                                          };
                                                                          if (success)
                                                                            fresh$macro$296 = fresh$macro$318
                                                                          else
                                                                            ()
                                                                        }
                                                                      else
                                                                        fresh$macro$296 = fresh$macro$299
                                                                    }
                                                                  };
                                                                  if (success.unary_!)
                                                                    {
                                                                      inputpos = fresh$macro$295;
                                                                      {
                                                                        val fresh$macro$321: Int = inputpos;
                                                                        {
                                                                          while$95(){
                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                              {
                                                                                inputpos = inputpos.+(1);
                                                                                while$95()
                                                                              }
                                                                            else
                                                                              ()
                                                                          };
                                                                          val fresh$macro$319: Int = inputpos;
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('\"')))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$94(){
                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).!=('\"')))
                                                                                  {
                                                                                    {
                                                                                      if (input.apply(inputpos).==('\\'))
                                                                                        inputpos = inputpos.+(1)
                                                                                      else
                                                                                        ();
                                                                                      inputpos = inputpos.+(1)
                                                                                    };
                                                                                    while$94()
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              };
                                                                              if (inputpos.<(inputsize))
                                                                                {
                                                                                  success = true;
                                                                                  inputpos = inputpos.+(1);
                                                                                  fresh$macro$322 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$319, inputpos)
                                                                                }
                                                                              else
                                                                                {
                                                                                  success = false;
                                                                                  ();
                                                                                  inputpos = fresh$macro$321
                                                                                }
                                                                            }
                                                                          else
                                                                            {
                                                                              success = false;
                                                                              ();
                                                                              inputpos = fresh$macro$321
                                                                            }
                                                                        }
                                                                      };
                                                                      if (success)
                                                                        fresh$macro$294 = fresh$macro$322
                                                                      else
                                                                        ()
                                                                    }
                                                                  else
                                                                    fresh$macro$294 = fresh$macro$296
                                                                }
                                                              };
                                                              if (success.unary_!)
                                                                {
                                                                  inputpos = fresh$macro$293;
                                                                  {
                                                                    val fresh$macro$326: Int = inputpos;
                                                                    {
                                                                      while$99(){
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            while$99()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      var fresh$macro$323: Boolean = false;
                                                                      val fresh$macro$324: Int = inputpos;
                                                                      success = false;
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==('-')))
                                                                        inputpos = inputpos.+(1)
                                                                      else
                                                                        ();
                                                                      if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                        {
                                                                          inputpos = inputpos.+(1);
                                                                          while$97(){
                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                              {
                                                                                inputpos = inputpos.+(1);
                                                                                while$97()
                                                                              }
                                                                            else
                                                                              ()
                                                                          };
                                                                          if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                            {
                                                                              inputpos = inputpos.+(1);
                                                                              while$96(){
                                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                  {
                                                                                    inputpos = inputpos.+(1);
                                                                                    while$96()
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              }
                                                                            }
                                                                          else
                                                                            ();
                                                                          success = true;
                                                                          fresh$macro$325 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$324, inputpos)
                                                                        }
                                                                      else
                                                                        if (inputpos.<(inputsize).&&(input.apply(inputpos).==('.')))
                                                                          {
                                                                            inputpos = inputpos.+(1);
                                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                              {
                                                                                inputpos = inputpos.+(1);
                                                                                while$98(){
                                                                                  if (inputpos.<(inputsize).&&(input.apply(inputpos).>=('0')).&&(input.apply(inputpos).<=('9')))
                                                                                    {
                                                                                      inputpos = inputpos.+(1);
                                                                                      while$98()
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                };
                                                                                success = true;
                                                                                fresh$macro$325 = new fastparsers.input.InputWindow.CharArrayStruct(input, fresh$macro$324, inputpos)
                                                                              }
                                                                            else
                                                                              ()
                                                                          }
                                                                        else
                                                                          ()
                                                                    }
                                                                  };
                                                                  if (success)
                                                                    fresh$macro$292 = fresh$macro$325
                                                                  else
                                                                    ()
                                                                }
                                                              else
                                                                fresh$macro$292 = fresh$macro$294
                                                            }
                                                          };
                                                          if (success.unary_!)
                                                            {
                                                              inputpos = fresh$macro$291;
                                                              {
                                                                val fresh$macro$330: Int = inputpos;
                                                                {
                                                                  var fresh$macro$329: Int = 0;
                                                                  val fresh$macro$328: Int = "null".toCharArray().length;
                                                                  while$101(){
                                                                    if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                      {
                                                                        inputpos = inputpos.+(1);
                                                                        while$101()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  while$100(){
                                                                    if (inputpos.<(inputsize).&&(fresh$macro$329.<(fresh$macro$328)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("null".toCharArray()).charAt(fresh$macro$329))))
                                                                      {
                                                                        {
                                                                          fresh$macro$329 = fresh$macro$329.+(1);
                                                                          inputpos = inputpos.+(1)
                                                                        };
                                                                        while$100()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  if (fresh$macro$329.==(fresh$macro$328))
                                                                    {
                                                                      success = true;
                                                                      fresh$macro$331 = "null".toCharArray()
                                                                    }
                                                                  else
                                                                    {
                                                                      success = false;
                                                                      ();
                                                                      inputpos = fresh$macro$330
                                                                    }
                                                                }
                                                              };
                                                              if (success)
                                                                fresh$macro$290 = fresh$macro$331
                                                              else
                                                                ()
                                                            }
                                                          else
                                                            fresh$macro$290 = fresh$macro$292
                                                        }
                                                      };
                                                      if (success.unary_!)
                                                        {
                                                          inputpos = fresh$macro$289;
                                                          {
                                                            val fresh$macro$335: Int = inputpos;
                                                            {
                                                              var fresh$macro$334: Int = 0;
                                                              val fresh$macro$333: Int = "true".toCharArray().length;
                                                              while$103(){
                                                                if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                                  {
                                                                    inputpos = inputpos.+(1);
                                                                    while$103()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              while$102(){
                                                                if (inputpos.<(inputsize).&&(fresh$macro$334.<(fresh$macro$333)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("true".toCharArray()).charAt(fresh$macro$334))))
                                                                  {
                                                                    {
                                                                      fresh$macro$334 = fresh$macro$334.+(1);
                                                                      inputpos = inputpos.+(1)
                                                                    };
                                                                    while$102()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              if (fresh$macro$334.==(fresh$macro$333))
                                                                {
                                                                  success = true;
                                                                  fresh$macro$336 = "true".toCharArray()
                                                                }
                                                              else
                                                                {
                                                                  success = false;
                                                                  ();
                                                                  inputpos = fresh$macro$335
                                                                }
                                                            }
                                                          };
                                                          if (success)
                                                            fresh$macro$288 = fresh$macro$336
                                                          else
                                                            ()
                                                        }
                                                      else
                                                        fresh$macro$288 = fresh$macro$290
                                                    }
                                                  };
                                                  if (success.unary_!)
                                                    {
                                                      inputpos = fresh$macro$287;
                                                      {
                                                        val fresh$macro$340: Int = inputpos;
                                                        {
                                                          var fresh$macro$339: Int = 0;
                                                          val fresh$macro$338: Int = "false".toCharArray().length;
                                                          while$105(){
                                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                                              {
                                                                inputpos = inputpos.+(1);
                                                                while$105()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          while$104(){
                                                            if (inputpos.<(inputsize).&&(fresh$macro$339.<(fresh$macro$338)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("false".toCharArray()).charAt(fresh$macro$339))))
                                                              {
                                                                {
                                                                  fresh$macro$339 = fresh$macro$339.+(1);
                                                                  inputpos = inputpos.+(1)
                                                                };
                                                                while$104()
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          if (fresh$macro$339.==(fresh$macro$338))
                                                            {
                                                              success = true;
                                                              fresh$macro$341 = "false".toCharArray()
                                                            }
                                                          else
                                                            {
                                                              success = false;
                                                              ();
                                                              inputpos = fresh$macro$340
                                                            }
                                                        }
                                                      };
                                                      if (success)
                                                        fresh$macro$286 = fresh$macro$341
                                                      else
                                                        ()
                                                    }
                                                  else
                                                    fresh$macro$286 = fresh$macro$288
                                                }
                                              }
                                            else
                                              ()
                                          };
                                          fresh$macro$342 = fresh$macro$286
                                        }
                                      else
                                        ()
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$343 = scala.Tuple2.apply[fastparsers.input.InputWindow.CharArrayStruct, Any](fresh$macro$277, fresh$macro$342)
                              };
                              if (success)
                                {
                                  fresh$macro$265.append(fresh$macro$343);
                                  {
                                    val fresh$macro$267: Int = inputpos;
                                    {
                                      {
                                        val fresh$macro$271: Int = inputpos;
                                        {
                                          var fresh$macro$270: Int = 0;
                                          val fresh$macro$269: Int = ",".toCharArray().length;
                                          while$83(){
                                            if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                                              {
                                                inputpos = inputpos.+(1);
                                                while$83()
                                              }
                                            else
                                              ()
                                          };
                                          while$82(){
                                            if (inputpos.<(inputsize).&&(fresh$macro$270.<(fresh$macro$269)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence(",".toCharArray()).charAt(fresh$macro$270))))
                                              {
                                                {
                                                  fresh$macro$270 = fresh$macro$270.+(1);
                                                  inputpos = inputpos.+(1)
                                                };
                                                while$82()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$270.==(fresh$macro$269))
                                            {
                                              success = true;
                                              fresh$macro$272 = ",".toCharArray()
                                            }
                                          else
                                            {
                                              success = false;
                                              ();
                                              inputpos = fresh$macro$271
                                            }
                                        }
                                      };
                                      if (success.unary_!)
                                        {
                                          fresh$macro$264 = false;
                                          inputpos = fresh$macro$267
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$264 = false;
                                  inputpos = fresh$macro$273
                                }
                            }
                          };
                          while$106()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$266 = fresh$macro$265.toList;
                      success = true
                    }
                  }
                else
                  ()
              };
              if (success)
                {
                  val fresh$macro$347: Int = inputpos;
                  {
                    var fresh$macro$346: Int = 0;
                    val fresh$macro$345: Int = "}".toCharArray().length;
                    while$108(){
                      if (inputpos.<(inputsize).&&(input.apply(inputpos).==(' ').||(input.apply(inputpos).==('\t')).||(input.apply(inputpos).==('\n')).||(input.apply(inputpos).==('\r'))))
                        {
                          inputpos = inputpos.+(1);
                          while$108()
                        }
                      else
                        ()
                    };
                    while$107(){
                      if (inputpos.<(inputsize).&&(fresh$macro$346.<(fresh$macro$345)).&&(input.apply(inputpos).==(scala.this.Predef.ArrayCharSequence("}".toCharArray()).charAt(fresh$macro$346))))
                        {
                          {
                            fresh$macro$346 = fresh$macro$346.+(1);
                            inputpos = inputpos.+(1)
                          };
                          while$107()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$346.==(fresh$macro$345))
                      {
                        success = true;
                        fresh$macro$348 = "}".toCharArray()
                      }
                    else
                      {
                        success = false;
                        ();
                        inputpos = fresh$macro$347
                      }
                  }
                }
              else
                ()
            };
            fastparsers.framework.parseresult.ParseResult.apply[Any, String](success, error, if (success)
              fresh$macro$266
            else
              null, inputpos)
          }
        }
      }
    };
    <synthetic> def obj$default$2: Int = 0
  };
  val fresh$macro$350: Int = 0;
  new fresh$macro$349()
}